# 
msgid ""
msgstr ""
"Project-Id-Version: Effektif User Manual 2.17.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-02-20 15:54+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../chapters/introduction.rst:2
msgid "Introduction"
msgstr ""

#: ../../chapters/introduction.rst:9
msgid "Coordinating tasks and handovers"
msgstr ""

#: ../../chapters/introduction.rst:10
msgid "Approvals"
msgstr ""

#: ../../chapters/introduction.rst:11
msgid "Routing documents"
msgstr ""

#: ../../chapters/introduction.rst:15
msgid "Benefits"
msgstr ""

#: ../../chapters/terminology.rst:2
msgid "Terminology"
msgstr ""

#: ../../chapters/terminology.rst:5
msgid "Case"
msgstr ""

#: ../../chapters/action-types.rst:4
msgid "Action Types"
msgstr ""

#: ../../chapters/action-types.rst:6
msgid ""
"All actions are displayed as lines in the 'Simple action list' and as "
"rounded rectangles in the 'Advanced flows' view."
msgstr ""

#: ../../chapters/action-types.rst:8
msgid ""
"Actions typically have a configuration panel that opens up when you select "
"the action."
msgstr ""

#: ../../chapters/action-types.rst:11
msgid "User task"
msgstr ""

#: ../../chapters/action-types.rst:13
msgid ""
"A user task means a user has to perform a task. In the :ref:`case <cases>`, "
"a task will be created. In the configuration form, following optional "
"details can be specified:"
msgstr ""

#: ../../chapters/action-types.rst:24
msgid "Send email"
msgstr ""

#: ../../chapters/action-types.rst:26
msgid ""
"The send email action sends an email to the specified user. In the "
"configuration you can specify"
msgstr ""

#: ../../chapters/action-types/google.rst:2
#: ../../chapters/action-types/google.rst:2
msgid "Google Drive file upload"
msgstr ""

#: ../../chapters/action-types/google.rst:4
#: ../../chapters/action-types/google.rst:4
msgid ""
"The Google Drive file upload sends one or more files to an account of your "
"choice. After creating a Google Drive file upload action, the configuration "
"panel shows a button to start configuring the account."
msgstr ""

#: ../../chapters/action-types/google.rst:9
#: ../../chapters/action-types/google.rst:9
msgid "Initial configuration file upload"
msgstr ""

#: ../../chapters/action-types/google.rst:11
#: ../../chapters/action-types/google.rst:11
msgid ""
"When you click on the button `Configure a Google Drive account`, a popup "
"window will appear that helps you setup authentication and integrate "
"Effektif with your Google Drive account. The first screen shows what steps "
"that will happen in the authentication popup window."
msgstr ""

#: ../../chapters/action-types/google.rst:16
#: ../../chapters/action-types/google.rst:16
msgid "Google Drive authentication flow"
msgstr ""

#: ../../chapters/action-types/google.rst:18
#: ../../chapters/action-types/google.rst:18
msgid ""
"After clicking `Click to continue`, the popup window will be redirected to "
"Google. Google will perform a check if you're already logged in to Google in"
" that browser. There are 3 possible outcomes:"
msgstr ""

#: ../../chapters/action-types/google.rst:22
#: ../../chapters/action-types/google.rst:22
msgid ""
"If you're already authenticated with a single user to Google, the login "
"screen is skipped and you go straight to the :ref:`permission screen <drive-"
"permission>` below."
msgstr ""

#: ../../chapters/action-types/google.rst:30
#: ../../chapters/action-types/google.rst:30
msgid "Google Drive login"
msgstr ""

#: ../../chapters/action-types/google.rst:39
#: ../../chapters/action-types/google.rst:39
msgid "Google Drive permission grant"
msgstr ""

#: ../../chapters/action-types/google.rst:41
#: ../../chapters/action-types/google.rst:41
msgid ""
"After accepting the permissions, the pop up will disappear and the "
"connection with your account is established. The Google Drive file upload "
"configuration will now display the account and also show the folders in 'My "
"Drive' in your Google Drive account."
msgstr ""

#: ../../chapters/action-types/google.rst:48
#: ../../chapters/action-types/google.rst:48
msgid "Google Drive authenticated configuration"
msgstr ""

#: ../../chapters/action-types/google.rst:50
#: ../../chapters/action-types/google.rst:50
msgid ""
"Other people in your organization will be able to see that you have "
"configured an account, but they will not be able to see youro email address "
"or browse your account folders."
msgstr ""

#: ../../chapters/action-types/google.rst:52
#: ../../chapters/action-types/google.rst:52
msgid ""
"In the section `Target folder` you can now browse and select the folder you "
"want to upload the file(s) to."
msgstr ""

#: ../../chapters/action-types/google.rst:54
#: ../../chapters/action-types/google.rst:54
msgid ""
"In section `Files to upload`, you can select the variable field containing "
"one or more files to be uploaded. If there was no file variable, a variable "
"called 'File' is created automatically. If there was already a file or list "
"of files in the variables, it is preselected."
msgstr ""

#: ../../chapters/action-types/javascript.rst:26
#: ../../chapters/action-types/javascript.rst:26
msgid ""
"Next, we'll show how to work with data. Suppose there is a form elsewhere in"
" the process that has each type of field and looks like this:"
msgstr ""

#: ../../chapters/action-types/javascript.rst:41
#: ../../chapters/action-types/javascript.rst:41
msgid "JavaScript variables"
msgstr ""

#: ../../chapters/action-types/javascript.rst:43
#: ../../chapters/action-types/javascript.rst:43
msgid ""
"Click `Show all fields` and select the variables you want to access in the "
"script. In this example, all variables are selected. For each variable that "
"is selected, you get an input field to specify a test value. Here you see "
"all fields with a test value."
msgstr ""

#: ../../chapters/action-types/javascript.rst:50
#: ../../chapters/action-types/javascript.rst:50
msgid "JavaScript test values"
msgstr ""

#: ../../chapters/action-types/javascript.rst:56
#: ../../chapters/action-types/javascript.rst:56
msgid "JavaScript script"
msgstr ""

#: ../../chapters/cases.rst:4
msgid "Cases"
msgstr ""

#: ../../chapters/cases.rst:7
msgid "What is a case"
msgstr ""

#: ../../chapters/cases.rst:9
msgid ""
"A case is a essentially a small collaboration space for a particular goal. "
"For example, 'Hire HR manager' or 'Send quote to customer X'. Cases are "
"typically bigger then a simple task for a single person and smaller then a "
"project. A case is used to break down the goal into concrete action items "
"(or tasks) and to collaborate with others. The case is the central place "
"where all relevant context information about the topic is shared and "
"discussed."
msgstr ""

#: ../../chapters/cases.rst:16
msgid "Create a case"
msgstr ""

#: ../../chapters/cases.rst:23
msgid "Start a new task"
msgstr ""

#: ../../chapters/cases.rst:25
msgid "Then the case header appears."
msgstr ""

#: ../../chapters/cases.rst:29
msgid "Enter case title"
msgstr ""

#: ../../chapters/cases.rst:35
msgid "New case"
msgstr ""

#: ../../chapters/cases.rst:38
msgid "Create case tasks"
msgstr ""

#: ../../chapters/cases.rst:40
msgid ""
"In a case, you can break down tasks like this. If you don't have tasks, the "
"tasks section might have to opened like shown in this scenario:"
msgstr ""

#: ../../chapters/cases.rst:45
msgid "Type the title of the new task and hit Enter"
msgstr ""

#: ../../chapters/cases.rst:49
msgid ""
"When a process is started, a :ref:`case <cases>` is created and all elements"
" not having incoming transitions will be started. So if you only use the "
":ref:`simple action list <action-list>` to create a list of user tasks, all "
"those tasks in the list will be started immediate when the process starts."
msgstr ""

#: ../../chapters/cases.rst:53
msgid "Completing a task"
msgstr ""

#: ../../chapters/cases.rst:55
msgid ""
"For ad hoc cases or tasks, there is a highlighted `Done` button to complete "
"the task."
msgstr ""

#: ../../chapters/cases.rst:57
msgid ""
"When tasks have a form, the form is displayed in the same position and it "
"has the button(s) to complete the task at the bottom of the form. Normally "
"that will just be the `Done`-button, but in case of decisions, it can be "
"multiple buttons. Each of those buttons will register the decision and "
"complete the task in one go."
msgstr ""

#: ../../chapters/cases.rst:61
msgid ""
":ref:`Process cases <term-process-case>` have a process associated that "
"knows when the case is completed. So usually those should not be completed "
"manually. The `Done` button is deactivated out or there is a label saying "
"\"Complete the tasks below\". When the last action of a process completes "
"the process case will be closed automatically."
msgstr ""

#: ../../chapters/cases.rst:67
msgid "Reopening a task"
msgstr ""

#: ../../chapters/cases.rst:69
msgid ""
"When you see the `Reopen` button in a task, it means the task is completed. "
"Reopening is good when you closed a task by accident or when you realize "
"more needs to be done for this task. If you just forgot to attach a document"
" or make a comment, you can still do that and you don't need to reopen the "
"task for that. Reopening a task can be better then creating a new task "
"because it has all the context in it."
msgstr ""

#: ../../chapters/cases.rst:75
msgid "Starting a process"
msgstr ""

#: ../../chapters/cases.rst:77
msgid ""
"In the `Advanced flows` view, this means that start events are optional in "
"most situations."
msgstr ""

#: ../../chapters/cases.rst:79
msgid "But in situations like this, that can be confusing:"
msgstr ""

#: ../../chapters/cases.rst:83
msgid "Start event necessary"
msgstr ""

#: ../../chapters/cases.rst:85
msgid ""
"Imagine we remove the start event, then there would be no elements without "
"incoming transitions. Then the process would start and nothing happens."
msgstr ""

#: ../../chapters/control-flow.rst:4
msgid "Control flow"
msgstr ""

#: ../../chapters/control-flow.rst:9
msgid "Transition"
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:2
#: ../../chapters/control-flow/exclusive-gateway.rst:2
msgid "Exclusive gateway"
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:11
#: ../../chapters/control-flow/exclusive-gateway.rst:11
msgid "Human decision"
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:34
#: ../../chapters/control-flow/exclusive-gateway.rst:34
msgid "Default human decision configuration"
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:48
#: ../../chapters/control-flow/exclusive-gateway.rst:48
msgid "Customized decision buttons"
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:55
#: ../../chapters/control-flow/exclusive-gateway.rst:55
msgid "Task decision buttons"
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:63
#: ../../chapters/control-flow/exclusive-gateway.rst:63
msgid "Automatic decision"
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:73
#: ../../chapters/control-flow/exclusive-gateway.rst:73
msgid "Automatic decision condition editor"
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:95
#: ../../chapters/control-flow/exclusive-gateway.rst:95
msgid "Default transition"
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:103
#: ../../chapters/control-flow/exclusive-gateway.rst:103
msgid "The default transition"
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:2
#: ../../chapters/control-flow/parallel-gateway.rst:2
msgid "Parallel Gateway"
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:8
#: ../../chapters/control-flow/parallel-gateway.rst:8
msgid "Forking"
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:17
#: ../../chapters/control-flow/parallel-gateway.rst:17
msgid "A parallel gateway example"
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:30
#: ../../chapters/control-flow/parallel-gateway.rst:30
msgid "Joining"
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:43
#: ../../chapters/control-flow/parallel-gateway.rst:43
msgid "A parallel gateway example with join"
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:48
#: ../../chapters/control-flow/parallel-gateway.rst:56
#: ../../chapters/control-flow/parallel-gateway.rst:48
#: ../../chapters/control-flow/parallel-gateway.rst:56
msgid "Default forking"
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:58
#: ../../chapters/control-flow/parallel-gateway.rst:58
msgid ""
"After `Send goods` completes, both tasks `Receive payment` and `Send goods` "
"will be created immediate."
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:63
#: ../../chapters/control-flow/parallel-gateway.rst:63
msgid "Default merging"
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:77
#: ../../chapters/control-flow/parallel-gateway.rst:83
#: ../../chapters/control-flow/parallel-gateway.rst:77
#: ../../chapters/control-flow/parallel-gateway.rst:83
msgid "Undesirable loopback"
msgstr ""

#: ../../chapters/control-flow.rst:22
msgid "Start event"
msgstr ""

#: ../../chapters/control-flow.rst:30 ../../chapters/control-flow.rst:37
msgid "End event"
msgstr ""

#: ../../chapters/control-flow.rst:43
msgid "No end event"
msgstr ""

#: ../../chapters/data-types.rst:2
msgid "Data types"
msgstr ""

#: ../../chapters/data-types.rst:11
msgid "Variables vs fields"
msgstr ""

#: ../../chapters/data-types.rst:27
msgid "String type"
msgstr ""

#: ../../chapters/data-types.rst:35
msgid "File type"
msgstr ""

#: ../../chapters/data-types.rst:43
msgid "User type"
msgstr ""

#: ../../chapters/data-types.rst:56
msgid "Email address type"
msgstr ""

#: ../../chapters/data-types.rst:64
msgid "Email type"
msgstr ""

#: ../../chapters/data-types.rst:96
msgid "Object types"
msgstr ""

#: ../../chapters/data-types.rst:111
msgid "List type"
msgstr ""

#: ../../chapters/integration/salesforce.rst:4
msgid "Salesforce Integration"
msgstr ""

#: ../../chapters/integration/salesforce.rst:6
msgid ""
"Effektif integrates with Salesforce workflows. You can configure this so "
"that changes in Salesforce will automatically trigger Effektif processes."
msgstr ""

#: ../../chapters/integration/salesforce.rst:10
msgid "Effektif configuration"
msgstr ""

#: ../../chapters/integration/salesforce.rst:12
msgid ""
"Before you can set-up Salesforce integration, you need to create an endpoint"
" in Effektif that Salesforce can send information to. Set this up in "
"Effektif as follows."
msgstr ""

#: ../../chapters/integration/salesforce.rst:15
msgid ""
"In the top-right user menu, select `My Organisation` and then select the "
"`Services` tab."
msgstr ""

#: ../../chapters/integration/salesforce.rst:20
msgid ""
"Under the Salesforce heading, enter a new trigger type name and select "
"`Create`."
msgstr ""

#: ../../chapters/integration/salesforce.rst:24
msgid ""
"Copy the generated `Endpoint URL`, or leave this window open for later."
msgstr ""

#: ../../chapters/integration/salesforce.rst:27
msgid "Salesforce configuration"
msgstr ""

#: ../../chapters/integration/salesforce.rst:29
msgid ""
"Before you can enable Salesforce triggers, you need to configure Outbound "
"messages, which are one kind of Salesforce workflow action. Set this up in "
"Salesforce as follows."
msgstr ""

#: ../../chapters/integration/salesforce.rst:32
msgid ""
"Select the Setup menu item, and select `Build` → `Create` → `Workflow & "
"Approvals` → `Workflow Rules`."
msgstr ""

#: ../../chapters/integration/salesforce.rst:34
msgid ""
"Create or edit a new or existing workflow rule, and in the `Workflow "
"Actions` section, select `Edit`."
msgstr ""

#: ../../chapters/integration/salesforce.rst:38
msgid ""
"On the `Specify Workflow Actions` page, select `Add Workflow Action` and "
"then `New Outbound Message`."
msgstr ""

#: ../../chapters/integration/salesforce.rst:40
msgid ""
"On the `Configure Outbound Message` page, configure the new `Outbound "
"Message`, to define which object fields to send to Effektif."
msgstr ""

#: ../../chapters/integration/salesforce.rst:42
msgid ""
"In the `Endpoint URL` field, paste the `Endpoint URL` from the Effektif "
"configuration you created earlier."
msgstr ""

#: ../../chapters/integration/salesforce.rst:46
msgid ""
"Select `Save`. Do not forget to activate the workflow rule as soon as you "
"have finished the configuration. To do this, click the `Activate` button at "
"the top of the `Workflow Rule Detail` page."
msgstr ""

#: ../../chapters/integration/salesforce.rst:50
msgid ""
"On the `Outbound message` page, next to `Endpoint WSDL`, select the `Click "
"for WSDL` link, which opens a web service definition file."
msgstr ""

#: ../../chapters/integration/salesforce.rst:52
msgid ""
"Save the ``workflowOutboundMessage.wsdl`` file, which you will use to "
"configure Effektif, next."
msgstr ""

#: ../../chapters/integration/salesforce.rst:55
msgid "Finish Effektif configuration"
msgstr ""

#: ../../chapters/integration/salesforce.rst:57
msgid ""
"The final configuration step is to use the web service definition file to "
"configure the Salesforce service in Effektif."
msgstr ""

#: ../../chapters/integration/salesforce.rst:59
msgid ""
"In the top-right user menu, select `My Organisation`, select the `Services` "
"tab, and then select the Salesforce trigger type you created earlier."
msgstr ""

#: ../../chapters/integration/salesforce.rst:63
msgid ""
"Select `Upload document`, and select the ``workflowOutboundMessage.wsdl`` "
"file you saved earlier."
msgstr ""

#: ../../chapters/integration/salesforce.rst:65
msgid ""
"Now you are ready to use the new :ref:`Salesforce trigger <trigger-"
"salesforce>` in Effektif."
msgstr ""

#: ../../chapters/process-builder.rst:4
msgid "Process builder"
msgstr ""

#: ../../chapters/process-builder/triggers.rst:2
#: ../../chapters/process-builder/triggers.rst:2
msgid "Triggers"
msgstr ""

#: ../../chapters/process-builder/triggers.rst:10
#: ../../chapters/process-builder/triggers.rst:10
msgid "Manual trigger"
msgstr ""

#: ../../chapters/process-builder/triggers.rst:18
#: ../../chapters/process-builder/triggers.rst:18
msgid "Form trigger"
msgstr ""

#: ../../chapters/process-builder/triggers.rst:28
#: ../../chapters/process-builder/triggers.rst:28
msgid "Form documents"
msgstr ""

#: ../../chapters/process-builder/triggers.rst:47
#: ../../chapters/process-builder/triggers.rst:47
msgid "Email trigger"
msgstr ""

#: ../../chapters/process-builder/triggers.rst:55
#: ../../chapters/process-builder/triggers.rst:55
msgid "Mail trigger configuration"
msgstr ""

#: ../../chapters/process-builder/triggers.rst:70
#: ../../chapters/process-builder/triggers.rst:70
msgid "Trigger mail in stream"
msgstr ""

#: ../../chapters/process-builder/triggers.rst:76
#: ../../chapters/process-builder/triggers.rst:76
msgid "Salesforce trigger"
msgstr ""

#: ../../chapters/process-builder/triggers.rst:78
#: ../../chapters/process-builder/triggers.rst:78
msgid ""
"A Salesforce trigger starts a new case in response to Salesforce sending an "
"outbound message as part of a Salesforce workflow. Before you can use a "
"Salesforce trigger, configure :ref:`Salesforce Integration <salesforce-"
"integration>`."
msgstr ""

#: ../../chapters/process-builder/triggers.rst:82
#: ../../chapters/process-builder/triggers.rst:82
msgid ""
"When you have configured a Salesforce service, you can select it as a "
"process trigger, so that messages from Salesforce will now trigger new "
"cases."
msgstr ""

#: ../../chapters/process-builder/triggers.rst:88
#: ../../chapters/process-builder/triggers.rst:88
msgid "Example of a Salesforce trigger"
msgstr ""

#: ../../chapters/process-builder/triggers.rst:90
#: ../../chapters/process-builder/triggers.rst:90
msgid ""
"In the process definition, you can use the Salesforce object fields that are"
" included in the Salesforce message just like normal :ref:`variables "
"<variables>`."
msgstr ""

#: ../../chapters/process-builder/actions.rst:2
#: ../../chapters/process-builder/actions.rst:2
msgid "Actions"
msgstr ""

#: ../../chapters/process-builder/actions.rst:13
#: ../../chapters/process-builder/actions.rst:13
msgid "Simple action list view"
msgstr ""

#: ../../chapters/process-builder/actions.rst:24
#: ../../chapters/process-builder/actions.rst:24
msgid "Advanced flows view"
msgstr ""

#: ../../chapters/process-builder/actions.rst:34
#: ../../chapters/process-builder/actions.rst:34
msgid "Adding a transition"
msgstr ""

#: ../../chapters/process-builder/actions.rst:45
#: ../../chapters/process-builder/actions.rst:45
msgid ""
"Start creating a transition by dragging the transition symbol to the "
"destination"
msgstr ""

#: ../../chapters/process-builder/actions.rst:54
#: ../../chapters/process-builder/actions.rst:54
msgid "Creating a transition hovering over destination"
msgstr ""

#: ../../chapters/process-builder/actions.rst:60
#: ../../chapters/process-builder/actions.rst:60
msgid "Creating the next user task"
msgstr ""

#: ../../chapters/process-builder/actions.rst:68
#: ../../chapters/process-builder/actions.rst:68
msgid "Start creating the next user task by dragging the action symbol"
msgstr ""

#: ../../chapters/process-builder/actions.rst:76
#: ../../chapters/process-builder/actions.rst:76
msgid "Drag the rounded rectangle symbol to an empty place"
msgstr ""

#: ../../chapters/process-builder/actions.rst:91
#: ../../chapters/process-builder/actions.rst:91
msgid "Control flow elements"
msgstr ""

#: ../../chapters/process-builder.rst:18
msgid "Variables"
msgstr ""

#: ../../chapters/process-builder.rst:32
msgid "Roles"
msgstr ""

#: ../../chapters/terminology.rst:22
msgid "Process case"
msgstr ""

#: ../../chapters/terminology.rst:38
msgid "Task"
msgstr ""

#: ../../chapters/terminology.rst:40
msgid ""
"Tasks are concrete action items inside a case that can be assigned to "
"people. In process cases, a task may have been created by a user task "
"action."
msgstr ""

#: ../../chapters/terminology.rst:44
msgid "Process"
msgstr ""

#: ../../chapters/terminology.rst:55
msgid "Action"
msgstr ""

#: ../../chapters/terminology.rst:66
msgid "Trigger"
msgstr ""

#: ../../chapters/terminology.rst:76
msgid "Role"
msgstr ""

#: ../../chapters/terminology.rst:90
msgid "Organization"
msgstr ""

#: ../../chapters/action-types.rst:16
msgid "Assignment:"
msgstr ""

#: ../../chapters/action-types.rst:17
msgid "A task can be assigned to a user or a :ref:`process role <roles>`"
msgstr ""

#: ../../chapters/action-types.rst:18
msgid "Form:"
msgstr ""

#: ../../chapters/action-types.rst:19
msgid ""
"A task can be given a form. To complete the task, the form has to be "
"submitted."
msgstr ""

#: ../../chapters/action-types.rst:21
msgid "Reminders:"
msgstr ""

#: ../../chapters/action-types.rst:21
msgid "Reminder emails and escalations."
msgstr ""

#: ../../chapters/action-types.rst:31
msgid "To:"
msgstr ""

#: ../../chapters/action-types.rst:30
msgid ""
"The people to which the email is sent. You can type a plain email address, "
"select a variable, a variable field or a user in the organization."
msgstr ""

#: ../../chapters/action-types.rst:39
msgid "Subject:"
msgstr ""

#: ../../chapters/action-types.rst:34
msgid ""
"The subject of the email. To use process data in the subject, start by "
"typing a `#`. If the list of variable fields is too long, you can just keep "
"typing after the `#` to narrow the list. In combination, use the up and down"
" arrows to select the right field. Hit enter to select the field. To remove "
"variable fields from the subject, just delete it like it's normal text."
msgstr ""

#: ../../chapters/action-types.rst:44
msgid "Attachments:"
msgstr ""

#: ../../chapters/action-types.rst:42
msgid ""
"To add attachments, click the attachments field. If there are files in the "
"process variables, they will be shown. Select one of the file variable "
"fields to add these as attachments to the mail."
msgstr ""

#: ../../chapters/action-types.rst:49
msgid "Body text:"
msgstr ""

#: ../../chapters/action-types.rst:47
msgid ""
"Just like in the subject, you can combine template text with variable fields"
" to Start by typing a `#`. See *Subject* above in this list for more details"
" instructions on using the `#`."
msgstr ""

#: ../../chapters/action-types/google.rst:24
#: ../../chapters/action-types/google.rst:24
msgid ""
"If you're not yet authenticated to Google in this browser yet, you'll get a "
"login window:"
msgstr ""

#: ../../chapters/action-types/google.rst:32
#: ../../chapters/action-types/google.rst:32
msgid ""
"If you're authenticated with multiple users to Google in this browser, "
"select the account you want to use."
msgstr ""

#: ../../chapters/action-types/google.rst:34
#: ../../chapters/action-types/google.rst:34
msgid ""
"After authentication is complete, you'll see the following screen that "
"allows you to give Effektif access to your Google account."
msgstr ""

#: ../../chapters/action-types/javascript.rst:2
#: ../../chapters/action-types/javascript.rst:2
msgid "JavaScript action"
msgstr ""

#: ../../chapters/action-types/javascript.rst:4
#: ../../chapters/action-types/javascript.rst:4
msgid ""
"The JavaScript action allows developers to run a JavaScript to the process "
"execution. After creating or selecting a JavaScript action, the "
"configuration panel looks like this:"
msgstr ""

#: ../../chapters/action-types/javascript.rst:11
#: ../../chapters/action-types/javascript.rst:11
msgid "JavaScript configuration panel"
msgstr ""

#: ../../chapters/action-types/javascript.rst:13
#: ../../chapters/action-types/javascript.rst:13
msgid ""
"The top section of the panel is the JavaScript text editor. By default, it "
"already contains ``console.log('Hello World!');``."
msgstr ""

#: ../../chapters/action-types/javascript.rst:16
#: ../../chapters/action-types/javascript.rst:16
msgid ""
"The lower section allows you to test the script. Click `Test it` to execute "
"the JavaScript code. The results are displayed underneath:"
msgstr ""

#: ../../chapters/action-types/javascript.rst:24
#: ../../chapters/action-types/javascript.rst:24
msgid "JavaScript test output"
msgstr ""

#: ../../chapters/action-types/javascript.rst:33
#: ../../chapters/action-types/javascript.rst:33
msgid "Form taking input for JavaScript"
msgstr ""

#: ../../chapters/action-types/javascript.rst:35
#: ../../chapters/action-types/javascript.rst:35
msgid ""
"When you open the JavaScript configuration again, you'll see the variables "
"section shows some of the form field variables."
msgstr ""

#: ../../chapters/action-types/javascript.rst:52
#: ../../chapters/action-types/javascript.rst:52
msgid ""
"To show you the data structures, we've changed the JavaScript to print all "
"variables."
msgstr ""

#: ../../chapters/action-types/javascript.rst:58
#: ../../chapters/action-types/javascript.rst:58
msgid ""
"When clicking `Test it` again, we can see the JSON structure of the variable"
" data for the different variable types."
msgstr ""

#: ../../chapters/action-types/javascript.rst:64
#: ../../chapters/action-types/javascript.rst:64
msgid "JavaScript JSON values"
msgstr ""

#: ../../chapters/cases.rst:18
msgid ""
"To create a new case, navigate to `Cases`; on the `Cases of` menu, select "
"`Cases without a process`, then click 'Start new case'."
msgstr ""

#: ../../chapters/cases.rst:31
msgid "Next, type the case title and hit Enter. The new case is now created."
msgstr ""

#: ../../chapters/control-flow.rst:6
msgid ""
"You use transitions, gateways and events to specify the processing order of "
"the actions in a process."
msgstr ""

#: ../../chapters/control-flow.rst:11
msgid ""
"A transition is an arrow from a source element to a destination element in "
"the `Advanced flows` view. The transition specifies that the destination "
"element is only ‘executed’ after the source element is completed. A "
"transition is called a ‘sequence flow’ in BPMN."
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:4
#: ../../chapters/control-flow/exclusive-gateway.rst:4
msgid ""
"Use an exclusive gateway to make a choice between multiple execution paths. "
"The exclusive gateway selects one of the outgoing transitions, and only "
"continues execution on that transition. There are two ways to configure an "
"exclusive gateway: with a *human decision* or an 8automatic decision*."
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:13
#: ../../chapters/control-flow/exclusive-gateway.rst:13
msgid ""
"Use a human decision for an exclusive gateway when a person must make a "
"decision. The previous action must be a user task, which will include making"
" the decision. The user interface presents the decision to the user as "
"buttons on the user task form."
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:18
#: ../../chapters/control-flow/exclusive-gateway.rst:18
msgid ""
"Here’s an example. Suppose you have a user task called ‘Review contract’, an"
" exclusive gateway and the two user tasks ‘Print contract’ and ‘Update "
"contract’:"
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:25
#: ../../chapters/control-flow/exclusive-gateway.rst:25
msgid ""
"An exclusive gateway must have at least one incoming and two outgoing "
"transitions"
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:27
#: ../../chapters/control-flow/exclusive-gateway.rst:27
msgid ""
"Select the exclusive gateway. Human decision is the default type. After "
"creating the elements and connecting them, as above, the exclusive gateway "
"will be configured:"
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:36
#: ../../chapters/control-flow/exclusive-gateway.rst:36
msgid ""
"`To Print contract` and `To Update contract` are the default decision "
"buttons that will appear on the user task form. For each button, the label "
"on the right indicates the next action in the process, which will be "
"performed when the button is clicked. In this example, when the user clicks "
"the decision button `To Print contract`, the `Print contract` task is "
"executed and the `Update contract` task will *not* be executed."
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:43
#: ../../chapters/control-flow/exclusive-gateway.rst:43
msgid ""
"You can easily change the text on the buttons. For example, change them to "
"`Approve` and `Reject`:"
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:50
#: ../../chapters/control-flow/exclusive-gateway.rst:50
msgid ""
"After starting a new case for this process, the `Review contract` task will "
"have decision buttons:"
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:57
#: ../../chapters/control-flow/exclusive-gateway.rst:57
msgid ""
"When adding form fields to the task before the exclusive gateway - `Review "
"contract` in this example - the decision buttons are added to the form."
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:65
#: ../../chapters/control-flow/exclusive-gateway.rst:65
msgid ""
"An automatic decision is an exclusive gateway that selects an outgoing "
"transition based on conditions that you choose. For each transition, you can"
" formulate a condition using workflow data. Transition conditions are "
"evaluated in order, from top to bottom. The workflow engine will take the "
"transition with the first condition that is true, using the current case’s "
"field values."
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:75
#: ../../chapters/control-flow/exclusive-gateway.rst:75
msgid ""
"To specify a condition, start by selecting a field and a comparison "
"operator. Enter either a static value in the input field on the right, or "
"click the |binding-symbol| button to select another field."
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:79
#: ../../chapters/control-flow/exclusive-gateway.rst:79
msgid ""
"A condition can include multiple field value comparisons. To add more sub-"
"conditions, click the button at the bottom of the list. You can also use the"
" select field at the top to specify that either **all** conditions in the "
"list must be true, or that it is enough for at least one of them to be true."
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:83
#: ../../chapters/control-flow/exclusive-gateway.rst:83
msgid ""
"When a sub-condition is incompletely specified, evaluating the whole "
"condition will fail and the transition will not be taken. The |warning-"
"symbol| symbol indicates an incomplete sub-condition, while the |check-"
"symbol| symbol indicates that the sub-condition is valid. Click either of "
"these symbols to remove the sub condition from the list."
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:87
#: ../../chapters/control-flow/exclusive-gateway.rst:87
msgid "An unspecified condition is marked with a |warning-symbol| symbol."
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:97
#: ../../chapters/control-flow/exclusive-gateway.rst:97
msgid ""
"An automatic decision usually has a default transition. A default transition"
" is a fallback mechanism: if none of the conditions evaluate to true, the "
"default transition is taken."
msgstr ""

#: ../../chapters/control-flow/exclusive-gateway.rst:105
#: ../../chapters/control-flow/exclusive-gateway.rst:105
msgid ""
"To make a transition the default, select the ‘per default’ item in the "
"selection field at the top."
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:4
#: ../../chapters/control-flow/parallel-gateway.rst:4
msgid ""
"Use parallel gateways to model tasks that will be completed at the same time"
" as each other, or one at a time but not in a particular order. To do this, "
"you *fork* and *join* the sequence flow."
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:10
#: ../../chapters/control-flow/parallel-gateway.rst:10
msgid ""
"With a parallel gateway, you can fork execution into multiple, concurrent "
"flows. When process execution arrives in a parallel gateway, a new "
"individual execution flow is created for each of the gateway’s outgoing "
"transitions. Let’s look at the following purchase order example:"
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:19
#: ../../chapters/control-flow/parallel-gateway.rst:19
msgid ""
"In this example, the parallel gateway will be activated when the `Enter "
"purchase order` user task is completed. The parallel gateway will create two"
" individual paths of execution. One will take the transition to `Receive "
"payment` and create that user task. Meanwhile, the other will create the "
"`Send goods` user task."
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:24
#: ../../chapters/control-flow/parallel-gateway.rst:24
msgid ""
"After `Enter purchase order` completes, both tasks `Receive payment` and "
"`Send goods` will be created."
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:26
#: ../../chapters/control-flow/parallel-gateway.rst:26
msgid ""
"You can have as many outgoing transitions as you want. All destination tasks"
" for those transitions will be started at once."
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:32
#: ../../chapters/control-flow/parallel-gateway.rst:32
msgid ""
"You also use a parallel gateway to join concurrent paths back together. In "
"this case, the joining parallel gateway has more then one incoming "
"transition. Workflow execution will wait at the gateway until as many "
"execution flows arrive as it has incoming transitions. When the last "
"concurrent flow arrives, the joining parallel gateway will activate and one "
"execution flow will be created on the outgoing transition."
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:38
#: ../../chapters/control-flow/parallel-gateway.rst:38
msgid ""
"To continue the previous example, extend the purchase order process to look:"
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:45
#: ../../chapters/control-flow/parallel-gateway.rst:45
msgid ""
"In this example, `Archive purchase order` will only start after both "
"`Receive payment` and `Send goods` are complete."
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:50
#: ../../chapters/control-flow/parallel-gateway.rst:50
msgid ""
"By default, multiple outgoing transitions out of an action like a user task "
"will be interpreted as parallel. Meaning that if you have multiple "
"transitions out of a user task, all destination actions of those transitions"
" will be performed concurrently. Let’s look at a simple example."
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:60
#: ../../chapters/control-flow/parallel-gateway.rst:60
msgid "You can combine default forking with a parallel gateway for joining."
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:65
#: ../../chapters/control-flow/parallel-gateway.rst:65
msgid ""
"When multiple transitions lead to a user task, the user task will be started"
" for each execution flow that arrives there. This means that there is no "
"implicit joining for parallel flows."
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:70
#: ../../chapters/control-flow/parallel-gateway.rst:70
msgid "Parallel gateway issues"
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:72
#: ../../chapters/control-flow/parallel-gateway.rst:72
msgid ""
"You will end up with problems if you loop back over parallel gateways. To "
"avoid situations:"
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:79
#: ../../chapters/control-flow/parallel-gateway.rst:79
msgid "and this:"
msgstr ""

#: ../../chapters/control-flow/parallel-gateway.rst:85
#: ../../chapters/control-flow/parallel-gateway.rst:85
msgid ""
"To avoid these issues, think of all actions between forking and joining as a"
" self-contained part of the process, such that no transitions should cross "
"that scope."
msgstr ""

#: ../../chapters/control-flow.rst:24
msgid ""
"A start event marks the start of a process. All process elements that do not"
" have incoming transitions are considered start elements. Start events don’t"
" have a direct connection to triggers. You can usually leave out start "
"events if you want to create more consice diagrams."
msgstr ""

#: ../../chapters/control-flow.rst:32
msgid ""
"Like start events, end events are also optional. End events mark the end of "
"an execution flow:"
msgstr ""

#: ../../chapters/control-flow.rst:39
msgid "This is equivalent to:"
msgstr ""

#: ../../chapters/data-types.rst:4
msgid ""
"The forms and some of the actions are linked to workflow data, called "
"*variables*. Workflow variables are mostly created automatically, as when "
"creating a new form field. Each variable has a data type. This section lists"
" the data types variables can have."
msgstr ""

#: ../../chapters/data-types.rst:13
msgid ""
"Workflow information is stored in variables. Each variable has a user-"
"defined name and a type. A type can be a single value, like a string (text) "
"or an email address. Other types like user, file or email are composite - "
"consisting of several values. Composite types have a list of fields."
msgstr ""

#: ../../chapters/data-types.rst:19
msgid ""
"When using expressions or configuring some action, references are made to "
"workflow data. These can be references to variables, or to fields inside "
"composite variables. The user interface guides you and shows the options you"
" have."
msgstr ""

#: ../../chapters/data-types.rst:29
msgid "The *String* type stores plain text."
msgstr ""

#: ../../chapters/data-types.rst:37
msgid "The *file* type stores a file."
msgstr ""

#: ../../chapters/data-types.rst:45
msgid ""
"A variable of type *user* refers to a user in your organization. A user is "
"an object type with the following properties:"
msgstr ""

#: ../../chapters/data-types.rst:48
msgid "(:ref:`id <type-id>`) The unique identifier for this user"
msgstr ""

#: ../../chapters/data-types.rst:49
msgid "(:ref:`string <type-string>`) The user’s first name"
msgstr ""

#: ../../chapters/data-types.rst:50
msgid "(:ref:`string <type-string>`) The user’s last name"
msgstr ""

#: ../../chapters/data-types.rst:51
msgid ""
"(:ref:`emailAddress <type-email-address>`) The email address of the user"
msgstr ""

#: ../../chapters/data-types.rst:58
msgid "The *email address* type stores an email address."
msgstr ""

#: ../../chapters/data-types.rst:66
msgid ""
"The *email type* stores an email, and is used by the email trigger. The "
"email that triggers the process will be stored as a variable. The data "
"fields in the email, such as *from address* or the attachments can be used "
"later on."
msgstr ""

#: ../../chapters/data-types.rst:70
msgid "An email is a composite type with the properties:"
msgstr ""

#: ../../chapters/data-types.rst:72
msgid ":ref:`id <type-id>`: The unique identifier for this email"
msgstr ""

#: ../../chapters/data-types.rst:73
msgid "(:ref:`emailAddress <type-email-address>`) The sender email address"
msgstr ""

#: ../../chapters/data-types.rst:74
msgid ""
"(:ref:`list <type-list>` of :ref:`emailAddress <type-email-address>`) The "
"email addresses of the recipients"
msgstr ""

#: ../../chapters/data-types.rst:75
msgid ""
"(:ref:`list <type-list>` of :ref:`emailAddress <type-email-address>`) Email "
"addresses that receive a carbon copy of the message"
msgstr ""

#: ../../chapters/data-types.rst:76
msgid "(:ref:`string <type-string>`) The subject of the email"
msgstr ""

#: ../../chapters/data-types.rst:77
msgid "(:ref:`string <type-string>`) The plain text message"
msgstr ""

#: ../../chapters/data-types.rst:78
msgid ""
"(:ref:`string <type-string>`) The HTML code for an HTML email (optional)"
msgstr ""

#: ../../chapters/data-types.rst:79
msgid ""
"(:ref:`list <type-list>` of :ref:`file <type-file>`) The files to attach to "
"the email"
msgstr ""

#: ../../chapters/data-types.rst:85
msgid "ID type"
msgstr ""

#: ../../chapters/data-types.rst:87
msgid ""
"The ID type is a special kind of string. These IDs identify objects and they"
" are always created by Effektif, and have no other meaning. An example of an"
" ID string is ``53fae958036471cea136ea83``."
msgstr ""

#: ../../chapters/data-types.rst:98
msgid ""
"Object types are composite data types that have a list of fields. Each field"
" has a name. For example: a user is an object type, with fields such as "
"``firstName``, ``lastName``, ``mailAddress``."
msgstr ""

#: ../../chapters/data-types.rst:103
msgid ""
"When an action requires data, like the ``files`` in a `Google File Upload`, "
"it’s possible to bind those input parameters to variables or fields inside "
"variable objects."
msgstr ""

#: ../../chapters/data-types.rst:113
msgid ""
"A list is simply a collection of values. The list is ordered and all "
"elements are of a specified type."
msgstr ""

#: ../../chapters/how-does-it-work.rst:2
msgid "How it works"
msgstr ""

#: ../../chapters/how-does-it-work.rst:6
msgid ""
"A process is a template for repetitive work. Processes are typically created"
" by people who manage work and specify which tasks and actions have to be "
"performed to reach a certain goal. For example: for every hire case, the "
"tasks ‘Conduct interview’, ‘Prepare contract’ and ‘Create email account’ "
"have to be completed."
msgstr ""

#: ../../chapters/how-does-it-work.rst:11
msgid ""
"After a process is published, many individual cases can be started. Effektif"
" keeps track of which tasks and actions have to be performed for each case. "
"Cases bring people together with relevant information that provides context "
"for completing the tasks. Cases are also collaboration spaces where people "
"can discuss and create new tasks for individual cases on the fly."
msgstr ""

#: ../../chapters/introduction.rst:5
msgid "When to use Effektif"
msgstr ""

#: ../../chapters/introduction.rst:7
msgid "Use Effektif for:"
msgstr ""

#: ../../chapters/introduction.rst:12
msgid "Fully-fledged business processes."
msgstr ""

#: ../../chapters/introduction.rst:17
msgid "You’ll get:"
msgstr ""

#: ../../chapters/introduction.rst:19
msgid "Control where it’s needed"
msgstr ""

#: ../../chapters/introduction.rst:20
msgid "Flexibility where it’s possible"
msgstr ""

#: ../../chapters/introduction.rst:21
msgid "Fewer delays (with automatic triggers, actions and timers)"
msgstr ""

#: ../../chapters/introduction.rst:22
msgid "No more miscommunications during handovers"
msgstr ""

#: ../../chapters/introduction.rst:23
msgid "Traceability - who did what"
msgstr ""

#: ../../chapters/introduction.rst:24
msgid "Clarity - who has to do what"
msgstr ""

#: ../../chapters/introduction.rst:25
msgid "Agility - processes are easier to change than software."
msgstr ""

#: ../../chapters/process-builder.rst:6
msgid ""
"The process builder is used to create and configure executable processes. An"
" executable process is similar to software, but it’s easier to build "
"automations using processes. With Effektif, non-technical people can create "
"useful processes."
msgstr ""

#: ../../chapters/process-builder/triggers.rst:4
#: ../../chapters/process-builder/triggers.rst:4
msgid ""
"A trigger defines when a process is started. There is no relation between "
"triggers and BPMN start events. See :ref:`Start event <start-event>`."
msgstr ""

#: ../../chapters/process-builder/triggers.rst:12
#: ../../chapters/process-builder/triggers.rst:12
msgid ""
"A manual trigger is the simplest way to start a process. With a manual "
"trigger, you start processes manually in Effektif, by selecting `Start new "
"case` and then selecting the process to start."
msgstr ""

#: ../../chapters/process-builder/triggers.rst:20
#: ../../chapters/process-builder/triggers.rst:20
msgid ""
"With a form trigger, you use a form to start a process. After selecting the "
"form trigger, you can use the form builder to specify form fields."
msgstr ""

#: ../../chapters/process-builder/triggers.rst:30
#: ../../chapters/process-builder/triggers.rst:30
msgid ""
"Many organisations have existing processes that are based on forms, either "
"on paper or in an electronic document. Often it’s a good idea to just keep "
"the form in its original format, such as a PDF document. You can use these "
"documents as the basis for the process, rather then rebuilding the form in "
"Effektif."
msgstr ""

#: ../../chapters/process-builder/triggers.rst:35
#: ../../chapters/process-builder/triggers.rst:35
msgid ""
"If you have multi-page forms with complex layouts, then the original form "
"might be the best option. People can then fill in the form, update the "
"original document or scan a paper copy, and then upload the completed "
"document to Effektif, using a single form field."
msgstr ""

#: ../../chapters/process-builder/triggers.rst:42
#: ../../chapters/process-builder/triggers.rst:42
msgid ""
"Effektif can’t read the data entered in form documents, so you will have to "
"add fields to the form for pieces of information that impact the process "
"flow."
msgstr ""

#: ../../chapters/process-builder/triggers.rst:49
#: ../../chapters/process-builder/triggers.rst:49
msgid ""
"An email trigger starts a new case for each email that you send to the "
"trigger‘s Effektif email address. Note this is different from reading an "
"existing email account, such as your own. After selecting the email trigger,"
" you can see its email address:"
msgstr ""

#: ../../chapters/process-builder/triggers.rst:57
#: ../../chapters/process-builder/triggers.rst:57
msgid ""
"The email trigger creates an email variable that stores the email that "
"started the process."
msgstr ""

#: ../../chapters/process-builder/triggers.rst:60
#: ../../chapters/process-builder/triggers.rst:60
msgid ""
"One way to use an email trigger is to add the trigger email address to a "
"mailing list, such as `support@example.com `or `info@example.com`. You’ll "
"have to ask the administrator of the mailing list to add the process "
"trigger’s email address to the list. Once you have done this, email sent to "
"the mailing list will also be forwarded to the process trigger address, "
"starting the process in Effektif. You will then see the email in the "
"activity stream:"
msgstr ""

#: ../../chapters/process-builder/actions.rst:4
#: ../../chapters/process-builder/actions.rst:4
msgid ""
"Actions are like steps in a process. An action might be a user task in "
"Effektif, an operation on a file in a document management system or any "
"other action that represents something to be done in a process."
msgstr ""

#: ../../chapters/process-builder/actions.rst:15
#: ../../chapters/process-builder/actions.rst:15
msgid ""
"The simple action list view is the simplest way to create a process, as a "
"list of actions. It’s the easiest way to create ‘checklist processes’, which"
" have a collection of user tasks that serve as a checklist."
msgstr ""

#: ../../chapters/process-builder/actions.rst:19
#: ../../chapters/process-builder/actions.rst:19
msgid ""
"If you don’t add any control flow in the `Advanced flows` view, all actions "
"will be started immediately when the process starts. By default, all actions"
" in the simple action list view run in parallel."
msgstr ""

#: ../../chapters/process-builder/actions.rst:26
#: ../../chapters/process-builder/actions.rst:26
msgid ""
"The `Advanced flows` view is a `BPMN "
"<http://en.wikipedia.org/wiki/Business_Process_Model_and_Notation>`_ diagram"
" editor that shows actions and control flow elements like events and "
"gateways. You use the `Advanced flows` view to add sequential flows between "
"actions, decisions and other control flow behaviour."
msgstr ""

#: ../../chapters/process-builder/actions.rst:36
#: ../../chapters/process-builder/actions.rst:36
msgid ""
"You can create a transition in the `Advanced flows` view. A transition "
"specifies sequential flow, which means the next action only starts when the "
"previous one is complete."
msgstr ""

#: ../../chapters/process-builder/actions.rst:40
#: ../../chapters/process-builder/actions.rst:40
msgid ""
"To add a transition, click to select the first action. Several symbols "
"appear to the right of the selected element:"
msgstr ""

#: ../../chapters/process-builder/actions.rst:47
#: ../../chapters/process-builder/actions.rst:47
msgid ""
"Click the transition symbol |transition-symbol| and drag it to the "
"destination element. When you drag the symbol over the destination element, "
"it indicates that you can drop to create the transition:"
msgstr ""

#: ../../chapters/process-builder/actions.rst:56
#: ../../chapters/process-builder/actions.rst:56
msgid ""
"Release the mouse button over the destination to create the transition."
msgstr ""

#: ../../chapters/process-builder/actions.rst:62
#: ../../chapters/process-builder/actions.rst:62
msgid ""
"There is an easy way to create the next User Task in a process, similar to "
"creating transitions above. Start by selecting the previous action:"
msgstr ""

#: ../../chapters/process-builder/actions.rst:70
#: ../../chapters/process-builder/actions.rst:70
msgid ""
"Click the rounded rectangle symbol |task-symbol| and drag it to an empty "
"place on the canvas."
msgstr ""

#: ../../chapters/process-builder/actions.rst:78
#: ../../chapters/process-builder/actions.rst:78
msgid ""
"Drop the symbol where you want to create the next user task. Release the "
"mouse button to create new user task where you dropped it, with a transition"
" from the previous action."
msgstr ""

#: ../../chapters/process-builder/actions.rst:84
#: ../../chapters/process-builder/actions.rst:84
msgid "Adding the next user task and its transition at the same time"
msgstr ""

#: ../../chapters/process-builder/actions.rst:86
#: ../../chapters/process-builder/actions.rst:86
msgid ""
"Alternatively, just click the user task icon |task-symbol| to create a new "
"user task in the default location, with a transition."
msgstr ""

#: ../../chapters/process-builder/actions.rst:93
#: ../../chapters/process-builder/actions.rst:93
msgid ""
"Control flow elements like events and gateways are also part of the diagram,"
" but unlike actions, control flow elements don’t represent something that "
"should happen. Instead, you use events and gateways to specify the flow "
"between the actions."
msgstr ""

#: ../../chapters/process-builder.rst:20
msgid ""
"A process has variables that store workflow data when the process runs. All "
"the information in forms and information required by the actions will be "
"connected to these variables. Each case can stores its own values for each "
"process variable."
msgstr ""

#: ../../chapters/process-builder.rst:24
msgid ""
"A process variable can contain a single value, such as a reference number, "
"or containing multiple fields, such as an email, which has fields like "
"`from`, `to`, `subject` and `attachments`."
msgstr ""

#: ../../chapters/process-builder.rst:34
msgid ""
"A role (a.k.a. process role) is a kind of process variable that is used for "
"assigning tasks. A role is a variable of type user that stores a single user"
" You can optionally configure a role with a list of canidates. Roles are "
"equivalent to swimlanes in BPMN."
msgstr ""

#: ../../chapters/process-builder.rst:39
msgid ""
"These process roles are not the same as organization roles. For example, you"
" can be a team lead in your organization, which can be a position without an"
" end date. A process role, such as ‘Reviewer’, has a different scope and "
"only applies for the duration of a single case."
msgstr ""

#: ../../chapters/process-builder.rst:44
msgid ""
"You can use a role to assign multiple tasks a person from a group of "
"candidates. For example, you might have a support process that includes "
"three user tasks that are assigned to a support engineer. Instead, assign "
"the three tasks to a new role called ‘Support engineer’, and add the "
"relevant people as candidates for the role."
msgstr ""

#: ../../chapters/process-builder.rst:49
msgid ""
"Creating the first task that has a role will notify all of the candidates "
"for the role. When one of the candidates takes the task, the subsequent "
"tasks with the same role will be assigned to the same person. That’s "
"efficient because this person has the context knowledge about that case."
msgstr ""

#: ../../chapters/process-builder.rst:54
msgid ""
"If you reassign a task that has a role assignment, Effektif will update the "
"role variable, and assign all subsequent tasks with the same role to the new"
" assignee."
msgstr ""

#: ../../chapters/terminology.rst:7
msgid ""
"A *case* is a collaboration page for a particular goal. A case has subtasks "
"representing the concrete action items to reach the goal. There are two "
"types of cases: process cases and ad-hoc cases."
msgstr ""

#: ../../chapters/terminology.rst:11
msgid ""
"Each case has an event stream that acts as an audit log and includes the "
"information that is shared during collaboration, such as comments, documents"
" and links. By using case comments instead of email, participants ensure "
"that discussions retain the full context for everyone involved. See "
":ref:`Cases <cases>`."
msgstr ""

#: ../../chapters/terminology.rst:24
msgid ""
"A *process case* is a case that is associated with a defined process. The "
"process describes what actions have to be done and in which order. In BPM "
"terminology, a process case is also known as a *process instance*."
msgstr ""

#: ../../chapters/terminology.rst:30
msgid "Ad-hoc case"
msgstr ""

#: ../../chapters/terminology.rst:32
msgid ""
"An *ad-hoc case* is a case without a predefined process. It’s a "
"collaboration space to reach any one-off goal. The case brings together a "
"set of tasks, a discussion and documents, and allows participants to share "
"any relevant context information for the tasks."
msgstr ""

#: ../../chapters/terminology.rst:46
msgid ""
"A process is a template to automate repetitive work, like a recipe that "
"describes the actions that have to be performed to achieve a goal."
msgstr ""

#: ../../chapters/terminology.rst:49
msgid ""
"For example, consider a `Hire employee` process. Each time someone is hired,"
" three tasks have to be completed: ‘Conduct interview’, ‘Prepare contract’ "
"and ‘Create email account’. Each time the process is started, a new case is "
"created."
msgstr ""

#: ../../chapters/terminology.rst:57
msgid ""
"Actions are the steps in a process that represent things to be done. When "
"starting a process, Effektif will ‘execute’ the actions in a process in the "
"proper order. This ordering is also refered to as :ref:`control flow "
"<control-flow>` and is specified with transitions, gateways and events."
msgstr ""

#: ../../chapters/terminology.rst:61
msgid ""
"There are different types of actions: a user task will create a task in a "
"case. A ‘Send Email’ action will send an email. A ‘Google file upload’ "
"action will upload a file to a Google Drive folder."
msgstr ""

#: ../../chapters/terminology.rst:68
msgid ""
"A trigger in a process specifies when the process is started. The manual "
"trigger is the simplest, and starts the process when you start a new process"
" case inside Effektif. The form trigger allows to specify a form that you "
"have to complete to start a new process case. The email trigger creates a "
"new process case when it receives email at its own email address. There is "
"no direct relation between triggers and start events."
msgstr ""

#: ../../chapters/terminology.rst:78
msgid ""
"A role is a mechanism used to assign user tasks in a process. Roles "
"correspond to swimlanes in a BPMN diagram, and are also known as a process "
"roles."
msgstr ""

#: ../../chapters/terminology.rst:82
msgid ""
"Process roles are different from organizational roles. For example, there "
"might be people your organization with the role ‘Support engineer’. However,"
" each support case only has one person in the ‘Support contact’ process "
"role. A process role only lasts for the duration of a case, while "
"organizational roles are more static and relate to the job you perform at "
"the organization. See :ref:`Roles <roles>`."
msgstr ""

#: ../../chapters/terminology.rst:92
msgid ""
"An organization represents a collection of Effektif users - typically a "
"company - together with all their data in Effektif. The data in an "
"organization is not visible to people outside the organization. When you’re "
"logged into Effektif, you see all the data inside one particular "
"organization. If you’re a member of multiple organizations, you can switch "
"between organizations by selecting a different organization under your name "
"in the top right corner."
msgstr ""

#~ msgid "How does it work?"
#~ msgstr ""

#~ msgid ""
#~ "A process is a template for repetitive work. Processes are typically created"
#~ " by managers and specify which tasks and actions have to be performed to "
#~ "reach a certain goal. For example: For every hire tasks 'Interview', "
#~ "'Contract' and 'Email account' have to be completed."
#~ msgstr ""

#~ msgid ""
#~ "After a process is published, many individual cases can be started. Effektif"
#~ " keeps track of which tasks and actions have to be performed for each case. "
#~ "Cases bring together people and all relevant context information to complete"
#~ " the tasks. Cases are collaboration spaces. People can discuss and create "
#~ "new tasks for individual cases on the fly."
#~ msgstr ""

#~ msgid "Use Case"
#~ msgstr ""

#~ msgid "Use it for"
#~ msgstr ""

#~ msgid "Full fledged business processes"
#~ msgstr ""

#~ msgid "You'll get"
#~ msgstr ""

#~ msgid "Control where it's needed"
#~ msgstr ""

#~ msgid "Flexibility where it's possible"
#~ msgstr ""

#~ msgid "Remove delays (automatic triggers, actions and timers)"
#~ msgstr ""

#~ msgid "Get rid of miscommunications during handovers"
#~ msgstr ""

#~ msgid "Traceability (who did what)"
#~ msgstr ""

#~ msgid "Clarity (who has to do what)"
#~ msgstr ""

#~ msgid "Agility (processes are easier to change than software)"
#~ msgstr ""

#~ msgid ""
#~ "Assignment: A task can be assigned to a user or a :ref:`process role "
#~ "<roles>`"
#~ msgstr ""

#~ msgid ""
#~ "Form: A task can be given a form. To complete the task, the form has to be "
#~ "submitted."
#~ msgstr ""

#~ msgid "Reminders: Reminder emails and escalations."
#~ msgstr ""

#~ msgid ""
#~ "To: The people to which the email is sent. You can type a plain email "
#~ "address, select a variable, a variable field or a user in the organization."
#~ msgstr ""

#~ msgid ""
#~ "Subject: The subject of the email. To use process data in the subject, start"
#~ " by typing a #. If the list of variable fields is too long, you can just "
#~ "keep typing after the # to narrow the list. In combination, use the up and "
#~ "down arrows to select the right field. Hit enter to select the field. To "
#~ "remove variable fields from the subject, just delete it like it's normal "
#~ "text."
#~ msgstr ""

#~ msgid ""
#~ "Attachments: To add attachments, click the attachments field. If there are "
#~ "files in the process variables, they will be shown. Select one of the file "
#~ "variable fields to add these as attachments to the mail."
#~ msgstr ""

#~ msgid ""
#~ "Body text: Just like in the subject, you can combine template text with "
#~ "variable fields to Start by typing a #. See 'Subject' above in this list for"
#~ " more details instructions on using the #."
#~ msgstr ""

#~ msgid ""
#~ "If you're not yet authenticated to Google in this browser yet, you'll get a "
#~ "login window like this:"
#~ msgstr ""

#~ msgid ""
#~ "If you're authenticated with multiple users to Google in this browser, "
#~ "you'll be able to simply select your account like this."
#~ msgstr ""

#~ msgid "Google Drive select authenticated user"
#~ msgstr ""

#~ msgid ""
#~ "After authentication is done, you'll see the following screen that allows "
#~ "you to give Effektif access to your Google account."
#~ msgstr ""

#~ msgid "Javascript action"
#~ msgstr ""

#~ msgid ""
#~ "The Javascript action allows developers to run a Javascript to the process "
#~ "execution. After creating or selecting a Javascript action, the "
#~ "configuration panel looks like this."
#~ msgstr ""

#~ msgid "Javascript configuration panel"
#~ msgstr ""

#~ msgid ""
#~ "The top part is the Javascript text editor. By default, it already contains "
#~ "``console.log('Hello World!');``."
#~ msgstr ""

#~ msgid ""
#~ "The lower part allows you to test the script. Just hit `Test it`. The "
#~ "results should look like this:"
#~ msgstr ""

#~ msgid "Javascript test output"
#~ msgstr ""

#~ msgid "Form taking input for Javascript"
#~ msgstr ""

#~ msgid ""
#~ "When you open the Javascript configuration again, you'll see the variables "
#~ "section shows some of the form field variables."
#~ msgstr ""

#~ msgid ""
#~ "To show you the data structures, we've changed the Javascript to print all "
#~ "variables."
#~ msgstr ""

#~ msgid ""
#~ "When clicking `Test it` again, we can see the json structure of the variable"
#~ " data for the different variable types."
#~ msgstr ""

#~ msgid "JavaScript json values"
#~ msgstr ""

#~ msgid ""
#~ "To create a new case, navigate to Tasks, click 'Start new task' and then "
#~ "select 'Task'."
#~ msgstr ""

#~ msgid ""
#~ "Next, type the case title and hit Enter. The new case is now created and "
#~ "appears like this:"
#~ msgstr ""

#~ msgid ""
#~ "With transitions, gateways and events, the order is specified in which the "
#~ "actions of a process are executed."
#~ msgstr ""

#~ msgid ""
#~ "A transition is an arrow from a source element to a destination element in "
#~ "the 'Advanced flow' view. The transition specifies that the destination "
#~ "element is only 'executed' after the source element is completed. A "
#~ "transition is also known as a 'sequence flow' in BPMN."
#~ msgstr ""

#~ msgid ""
#~ "Use an exclusive gateway to make a choice between multiple execution paths. "
#~ "The exclusive gateway selects one out of multiple outgoing transitions and "
#~ "only propagates execution further on that transition. There are 2 ways to "
#~ "configure an exclusive gateway:"
#~ msgstr ""

#~ msgid ""
#~ "The human decision type of exclusive gateway is used when a person must make"
#~ " a decision. The previous action has to be a user task. The decision is "
#~ "presented to the user as buttons in form of the previous task."
#~ msgstr ""

#~ msgid ""
#~ "Here's an example. As a starting point, we already have a user task called "
#~ "'Review contract', an exclusive gateway and then two user tasks 'Print "
#~ "contract' and 'Update contract' like this:"
#~ msgstr ""

#~ msgid ""
#~ "An exclusive gateway must have at least one incoming and 2 outgoing "
#~ "transitions"
#~ msgstr ""

#~ msgid ""
#~ "Select the exclusive gateway. The human decision is the default type. After "
#~ "creating the elements and connecting them like above, the exclusive gateway "
#~ "is already configured like this:"
#~ msgstr ""

#~ msgid ""
#~ "`To Print contract` and `To Update contract` are the default decision "
#~ "buttons that will appear on a form. For each button, the next action is "
#~ "indicated that will be performed when it is clicked. So in this example, "
#~ "when the user clicks the decision button `To Print contract`, only `Print "
#~ "contract` is executed and `Update contract` will *not* be executed."
#~ msgstr ""

#~ msgid ""
#~ "The text on the buttons can easily be changed. Let's change it to `Approve` "
#~ "and `Reject` like this."
#~ msgstr ""

#~ msgid ""
#~ "After starting a new case for this process, the task Review contract will "
#~ "have decision buttons like this:"
#~ msgstr ""

#~ msgid ""
#~ "When adding form fields to the task before the exclusive gateway (in this "
#~ "example \"Review contract\"), the decision buttons will be combined with the"
#~ " form fields."
#~ msgstr ""

#~ msgid ""
#~ "An automatic decision is an exclusive gateway that selects an outgoing "
#~ "transition based on conditions that you can formulate using the process "
#~ "data. Each transition can be given a condition. The transition conditions "
#~ "are evaluated in order from top to bottom. The first condition that is true "
#~ "using the field values of the current case, will be taken."
#~ msgstr ""

#~ msgid ""
#~ "For specifying a condition you start with selecting a field and a comparison"
#~ " operator. Then you can either enter a static value in the input field on "
#~ "the right, or click the |binding-symbol| button to select another field."
#~ msgstr ""

#~ msgid ""
#~ "When you do not specify a condition, it will evaluate to false and the "
#~ "transition will not be taken. A non-specified condition is marked with a "
#~ "|warning-symbol| symbol."
#~ msgstr ""

#~ msgid ""
#~ "Usually an automatic decision has a default transition. It's a fallback "
#~ "mechanism and it means that if none of the conditions evaluate to true, the "
#~ "default transition is taken."
#~ msgstr ""

#~ msgid ""
#~ "If you want to make a transition the default, click on |following-symbol|. "
#~ "The other way round, if you want to set a condition on the default "
#~ "transition, click on |default-symbol|."
#~ msgstr ""

#~ msgid ""
#~ "With a parallel gateway, you can fork execution in multiple, concurrent "
#~ "flows. When process execution arrives in a parallel gateway, a new "
#~ "individual execution flow is created for each outgoing transition. Let's "
#~ "look at the following purchase order example:"
#~ msgstr ""

#~ msgid ""
#~ "In the purchase order example above, the parallel gateway will be activated "
#~ "when user task `Enter purchase order` is completed. The parallel gateway "
#~ "will create 2 individual paths of execution. One will take the transition to"
#~ " `Receive payment` and create that user task. The other to `Send goods` and "
#~ "create that user task as well."
#~ msgstr ""

#~ msgid ""
#~ "In summary, after `Enter purchase order` completes, both tasks `Receive "
#~ "payment` and `Send goods` will be created."
#~ msgstr ""

#~ msgid ""
#~ "You can have as many outgoing transitions as you want. All destination "
#~ "actions for those transitions will be started at once."
#~ msgstr ""

#~ msgid ""
#~ "The parallel gateway is also used for joining concurrent paths back "
#~ "together. In that case, the joining parallel gateway has more then one "
#~ "incoming transition. It will wait until as many execution flows arrive as it"
#~ " has incoming transitions. When the last concurrent flow arrives, the "
#~ "joining parallel gateway will activate and one execution flow will be "
#~ "created on the outgoing transition."
#~ msgstr ""

#~ msgid ""
#~ "Let's build forward on the example we showed above. We complete that "
#~ "purchase order example so it now looks like this."
#~ msgstr ""

#~ msgid ""
#~ "In this example, `Archive purchase order` will only be started after both "
#~ "`Receive payment` and `Send goods` are completed."
#~ msgstr ""

#~ msgid ""
#~ "By default, multiple outgoing transitions out of an action like a user task "
#~ "will be interpreted as parallel. Meaning that if you have multiple "
#~ "transitions out of a user task, all destination actions of those transitions"
#~ " will be performed concurrently. Let's look at a simple example."
#~ msgstr ""

#~ msgid "Default forking can be combined with a parallel gateway for joining."
#~ msgstr ""

#~ msgid ""
#~ "On the other hand, when multiple transitions arrive in a user task, the user"
#~ " task will be started for each execution flow that arrives there. So no "
#~ "implicit joining will happen."
#~ msgstr ""

#~ msgid "Trouble"
#~ msgstr ""

#~ msgid ""
#~ "Using parallelism sometimes leads to problems when people loop back over "
#~ "parallel gateways. In general try to avoid situations like this."
#~ msgstr ""

#~ msgid "and this"
#~ msgstr ""

#~ msgid ""
#~ "In general, our advice is that all actions between forking and joining "
#~ "should be considered as a scope and no transitions should cross that scope."
#~ msgstr ""

#~ msgid ""
#~ "A start event marks the start of a process. All process elements that do not"
#~ " have incoming transitions are considered start elements. Start don't have a"
#~ " direct connection to triggers. Usually start events can be omitted to "
#~ "create more consice diagrams."
#~ msgstr ""

#~ msgid ""
#~ "Just like start events, end events are also optional. They can mark the end "
#~ "of an execution flow like this."
#~ msgstr ""

#~ msgid "Which is equivalent to"
#~ msgstr ""

#~ msgid ""
#~ "The forms and some of the actions are linked to process data. The process "
#~ "variables are mostly created automatic like for example when creating a new "
#~ "form field. Each of the variables has a data type. This section lists all "
#~ "the data types variables can have."
#~ msgstr ""

#~ msgid ""
#~ "Process information is stored in variables. Each variable has a user defined"
#~ " name and a type. A type can be atomic, like a string (text) or an email "
#~ "address. Other types like user, file or email are composite. Those types "
#~ "have a list of fields. When using expressions or configuring some action, "
#~ "references are made to process data. Often those references can be to the "
#~ "variables themselves or to fields inside the variables. The process builder "
#~ "will guide you and show the appropriate options you have."
#~ msgstr ""

#~ msgid "Stores plain text."
#~ msgstr ""

#~ msgid "Stores a file"
#~ msgstr ""

#~ msgid ""
#~ "A variable of type user refers to a user in your organization. A user is an "
#~ "object type with following properties"
#~ msgstr ""

#~ msgid ":ref:`id <type-id>`: The unique identifier for this user"
#~ msgstr ""

#~ msgid ":ref:`firstName <type-string>`: The first name"
#~ msgstr ""

#~ msgid ":ref:`lastName <type-string>`: The last name"
#~ msgstr ""

#~ msgid ":ref:`emailAddress <type-email-address>`: The email address"
#~ msgstr ""

#~ msgid ""
#~ "Stores an email. At the moment, the only way this type can be used is with "
#~ "the email trigger. The email that triggers the process will be stored as a "
#~ "variable. The data fields in the email like from or the attachments can be "
#~ "used later on."
#~ msgstr ""

#~ msgid "An email is an object type with following properties"
#~ msgstr ""

#~ msgid ":ref:`id <type-id>`: the unique identifier for this email."
#~ msgstr ""

#~ msgid ":ref:`from <type-email-address>` (:ref:`list <type-list>`)"
#~ msgstr ""

#~ msgid ":ref:`to <type-email-address>` (:ref:`list <type-list>`)"
#~ msgstr ""

#~ msgid ":ref:`cc <type-email-address>` (:ref:`list <type-list>`)"
#~ msgstr ""

#~ msgid ":ref:`subject <type-string>`"
#~ msgstr ""

#~ msgid ":ref:`bodyText <type-string>`"
#~ msgstr ""

#~ msgid ":ref:`bodyHtml <type-string>`"
#~ msgstr ""

#~ msgid ":ref:`attachments <type-file>` (:ref:`list <type-list>`)"
#~ msgstr ""

#~ msgid "Id type"
#~ msgstr ""

#~ msgid ""
#~ "The id type is a special kind of string. These ids have as a purpose to "
#~ "identify objects and they are always created by Effektif and they have no "
#~ "meaning. An example of an id string is ``53fae958036471cea136ea83``"
#~ msgstr ""

#~ msgid ""
#~ "Object types are data types that have a list of fields. Each field has a "
#~ "name. For example: a user is a specific kind of an object type. It has "
#~ "fields ``firstName``, ``lastName``, ``mailAddress`` and so on."
#~ msgstr ""

#~ msgid ""
#~ "When an action requires data, like the ``files`` in a `Google File Upload`, "
#~ "it's possible to bind those input parameters to variables or fields inside "
#~ "variable objects."
#~ msgstr ""

#~ msgid ""
#~ "A list is simply a collection of elements. The list is ordered and all "
#~ "elements are of a specified type."
#~ msgstr ""

#~ msgid ""
#~ "The process builder is used to create and configure executable processes. An"
#~ " executable process is in many aspects similar to software. But it's much "
#~ "easier to build automations using processes. With Effektif, even non-"
#~ "technical people can create useful processes."
#~ msgstr ""

#~ msgid ""
#~ "A trigger defines when a process is started. There is no relation between "
#~ "triggers and BPMN start events. For more details, see Start actions."
#~ msgstr ""

#~ msgid ""
#~ "A manual trigger is the simplest. It means that users have to start "
#~ "processes manually in Effektif. That is done in the Tasks view by clicking "
#~ "New task and then selecting the process name to start."
#~ msgstr ""

#~ msgid ""
#~ "With a form trigger, the user is presented a form to start a process. After "
#~ "selecting the form trigger, you can specify the form fields in the trigger. "
#~ ".. todo .. For more information on the form builder, see Form builder."
#~ msgstr ""

#~ msgid ""
#~ "There are many processes for which there is an existing procedure based on a"
#~ " form. Often it's a good idea to just keep the form in it's original pdf or "
#~ "word form. Such documents can be used as the basis for the process, rather "
#~ "then rebuilding the form in Effektif. Especially when it comes to multi-page"
#~ " forms with complex layouts, then the original form might be the best "
#~ "option. Users can then fill in the form, either update the original document"
#~ " or scan it and then upload the filled in document in a single form field in"
#~ " Effektif."
#~ msgstr ""

#~ msgid ""
#~ "At this moment, Effektif can't yet read the data entered in form documents. "
#~ "So for those pieces of information that impact the process flow, you can "
#~ "simply add extra fields to the form. For a small number of fields, users "
#~ "typically won't mind if they have to enter it twice."
#~ msgstr ""

#~ msgid ""
#~ "An email trigger start a new case for each email that arrives on an email "
#~ "address that is related to the trigger. Note this is different from scanning"
#~ " an existing mail box like your own. After selecting the email trigger, you "
#~ "can see the email address for the trigger."
#~ msgstr ""

#~ msgid ""
#~ "When creating a new trigger, an email variable will be created. The email "
#~ "variable will store the email that started the process."
#~ msgstr ""

#~ msgid "There are 2 main use cases for the email trigger:"
#~ msgstr ""

#~ msgid ""
#~ "First, the trigger email address can be added to a mailing list like eg "
#~ "`support@example.com `or `info@example.com`. You'll have to ask the "
#~ "administrator of the mailing list to add the process trigger email address "
#~ "to the list. What will happen is that for each mail that arrives on the "
#~ "list, the mail will also be forwarded to the process trigger address. When "
#~ "that email arrives at Effektif, the process will be started. And the email "
#~ "will show up in the stream like this:"
#~ msgstr ""

#~ msgid ""
#~ "Actions are like steps in a process. This can be a user task in Effektif, an"
#~ " operation on a file in a document management system or any other action "
#~ "that represents something to be done in a process."
#~ msgstr ""

#~ msgid ""
#~ "The simple action list view is the simplest form to create a process and it "
#~ "shows all actions in a list. It's the easiest way to create so called "
#~ "checklist processes. These are processes that have a bunch of user tasks "
#~ "that serve as a checklist. If no control flow is added in the Advanced flows"
#~ " view, all actions will be started immediately when the process starts. So "
#~ "by default, all actions in the simple action list view run in parallel."
#~ msgstr ""

#~ msgid ""
#~ "The advanced flow view is a BPMN diagram editor. It shows the actions and "
#~ "also control flow elements like events and gateways. The advanced flow view "
#~ "should be used to add sequential flows between actions, decisions and other "
#~ "control flow behavior."
#~ msgstr ""

#~ msgid ""
#~ "To create a transition, you have to be in the `Advanced flows` view. A "
#~ "transition specifies sequential flow. It means the next element only starts "
#~ "when the previous is completed."
#~ msgstr ""

#~ msgid ""
#~ "To add a transition, select the first element by clicking on it. You'll see "
#~ "a couple of symbols appearing around the selected element like this:"
#~ msgstr ""

#~ msgid ""
#~ "Then click and hold down the transition symbol |transition-symbol| and drag "
#~ "it to the destination element. When you move the mouse pointer over the "
#~ "destination element, still keeping the mouse button down, it's indicated "
#~ "that you can drop to create the transition like this:"
#~ msgstr ""

#~ msgid "Releasing the mouse over the destination will create the transition."
#~ msgstr ""

#~ msgid ""
#~ "There is an very easy way to create the next User Task. It's similar to "
#~ "creating transitions above. You start with selecting the action after which "
#~ "you want to create a new user task."
#~ msgstr ""

#~ msgid ""
#~ "Then click and hold down the rounded rectangle symbol |task-symbol| and drag"
#~ " it to the empty place on the canvas."
#~ msgstr ""

#~ msgid ""
#~ "Drop it whereyou want to create the next user task. When you release the "
#~ "mouse, the new user task and the transition will be created."
#~ msgstr ""

#~ msgid "Created the next user task and transition at once"
#~ msgstr ""

#~ msgid ""
#~ "Control flow elements like events and gateways are also part of the diagram,"
#~ " but unlike actions, control flow elements don't represent something that "
#~ "should happen. Events and gateways are used to specify the flow between the "
#~ "actions."
#~ msgstr ""

#~ msgid ""
#~ "A process has variables to store process data. All the information in forms "
#~ "and required by the actions will be connected to the process variables. Each"
#~ " case can stores it's own values for each process variable."
#~ msgstr ""

#~ msgid ""
#~ "A process variable can be a object containing fields like for example an "
#~ "email. The email has fields `from`, `to`, `subject`, `attachments` and so "
#~ "on."
#~ msgstr ""

#~ msgid "When creating a form field, a variable will connected automatic."
#~ msgstr ""

#~ msgid ""
#~ "When the last usage of a variable is removed, the variable is automatically "
#~ "removed."
#~ msgstr ""

#~ msgid ""
#~ "A role (aka process role) is a kind of process variable that is used for "
#~ "assigning tasks. It's a variable of type user. It stores a single user and "
#~ "optionally you can configure it with a list of canidates."
#~ msgstr ""

#~ msgid ""
#~ "Roles are equivalent to swimlanes in BPMN. Later we'll add support for "
#~ "swimlane visualization of roles."
#~ msgstr ""

#~ msgid ""
#~ "These (process) roles are not to be confused with organizational roles. You "
#~ "can be head of a team in your organization. This can be a position without "
#~ "an end date. The scope of such an organizational role is different from the "
#~ "process roles. Process roles only apply for the duration of a single case. "
#~ "For example, you act as the 'Approver' for that particular case."
#~ msgstr ""

#~ msgid ""
#~ "A role is used to assign multiple tasks a person in a group of candidates. "
#~ "For example when 3 user tasks in a process have to be assigned to a support "
#~ "engineer. Then assign the 3 tasks to a role called 'Support engineer' and "
#~ "add all support people to the candidates of the role."
#~ msgstr ""

#~ msgid ""
#~ "The first task with a role will notify all candidates. When one of the "
#~ "candidates takes the task, the subsequent tasks assigned to that role will "
#~ "be assigned to the same person. That's efficient because this person has the"
#~ " context knowledge about that case."
#~ msgstr ""

#~ msgid ""
#~ "When reassigning a task associated to a role, the role variable will be "
#~ "updated. All subsequent tasks will be assigned to the new assignee."
#~ msgstr ""

#~ msgid ""
#~ "A case is a collaboration page for a particular goal. A case has subtasks "
#~ "representing the concrete action items to reach the goal. There are two "
#~ "types of cases: process cases and ad hoc cases. Each case has an event "
#~ "stream acts as an audit log and includes all relevant information that is "
#~ "shared to collaborate like documents and links. By using case comments "
#~ "instead of email, participants ensure that the discussions shares the full "
#~ "context with all people involved. :ref:`Learn more about cases <cases>`."
#~ msgstr ""

#~ msgid ""
#~ "A process case is a case that is associated to a process. The process "
#~ "describes what actions have to be done and in which order. In BPM "
#~ "terminology, a process case is also known as a process instance."
#~ msgstr ""

#~ msgid "Ad hoc case"
#~ msgstr ""

#~ msgid ""
#~ "An ad hoc case is a case without a predefined process. It's a collaboration "
#~ "space to reach any one time goal. The case brings together a set of tasks, a"
#~ " discussion, documents and allows participants to share any relevant context"
#~ " information for the tasks."
#~ msgstr ""

#~ msgid ""
#~ "A process is a template to automate repetitive work. It like a recipe that "
#~ "describes the actions that have to be performed to achieve a goal. As an "
#~ "example, we can consider a 'Hire' process. Each time someone is hired, 3 "
#~ "tasks have to be completed: 'Interview', 'Contract' and 'Email account'. "
#~ "Each time the process is started, a new case is created."
#~ msgstr ""

#~ msgid ""
#~ "Actions are the steps in a process that represent things to be done. When "
#~ "starting a process, Effektif will 'execute' the actions in a process in the "
#~ "proper order. The ordering is also refered to as :ref:`control flow "
#~ "<control-flow>` and is specified with transitions, gateways and events. "
#~ "There are different types of actions: a user task will create a task in a "
#~ "case. A 'Send Email' action will send an email. A 'Google file upload' "
#~ "action will upload a file to a Google Drive folder."
#~ msgstr ""

#~ msgid ""
#~ "A trigger in a process specifies when the process is started. The manual "
#~ "trigger is the simplest. This means that the process is started when a user "
#~ "starts a new process case inside Effektif. The form trigger allows to "
#~ "specify a form that users have to complete to start a new process case. And "
#~ "the mail trigger will create a new process case automatic each time a mail "
#~ "arrives on a specific email address. There is no direct relation between "
#~ "triggers and start events."
#~ msgstr ""

#~ msgid ""
#~ "A role is mechanism to perform assignments of user tasks in a process. Roles"
#~ " correspond to swimlanes in a BPMN diagram. It's also known as a process "
#~ "role. Process roles are different from organizational roles. For example, "
#~ "there might be 20 peole in an organization having the role 'Support "
#~ "engineer'. Yet each support case could have 1 person acting as the 'Support "
#~ "contact' process role. So a process role only lasts for the duration of a "
#~ "case. While organizational roles are more static and relate to the job you "
#~ "perform at the organization. :ref:`Read more about roles <roles>`"
#~ msgstr ""

#~ msgid ""
#~ "An organization represents a collection of users --typically a company-- "
#~ "together with all their data in Effektif. The data in an organization is not"
#~ " visible to people outside the organization. When you're logged into "
#~ "Effektif, you see all the data inside one particular organization. If you "
#~ "are a member of multiple organizations, you can switch between organizations"
#~ " by selecting a different organization under your name in the top right "
#~ "corner."
#~ msgstr ""

#~ msgid ""
#~ "A case is a collaboration page for a particular goal. A case has subtasks "
#~ "representing the concrete action items to reach the goal. There are two "
#~ "types of cases: process cases and ad hoc cases. Each case has an event "
#~ "stream acts as an audit log and includes all relevant information that is "
#~ "shared to collaborate like documents and links. By using case comments "
#~ "instead of email, participants ensure that the discussions shares the full "
#~ "context with all people involved. Learn more about cases."
#~ msgstr ""

#~ msgid ""
#~ "Process case A process case is a case that is associated to a process. The "
#~ "process describes what actions have to be done and in which order. In BPM "
#~ "terminology, a process case is also known as a process instance."
#~ msgstr ""

#~ msgid ""
#~ "Ad hoc case An ad hoc case is a case without a predefined process. It's a "
#~ "collaboration space to reach any one time goal. The case brings together a "
#~ "set of tasks, a discussion, documents and allows participants to share any "
#~ "relevant context information for the tasks."
#~ msgstr ""

#~ msgid ""
#~ "Task Tasks are concrete action items inside a case that can be assigned to "
#~ "people. In process cases, a task may have been created by a user task "
#~ "action."
#~ msgstr ""

#~ msgid ""
#~ "Process A process is a template to automate repetitive work. It like a "
#~ "recipe that describes the actions that have to be performed to achieve a "
#~ "goal. As an example, we can consider a 'Hire' process. Each time someone is "
#~ "hired, 3 tasks have to be completed: 'Interview', 'Contract' and 'Email "
#~ "account'. Each time the process is started, a new case is created."
#~ msgstr ""

#~ msgid ""
#~ "Action Actions are the steps in a process that represent things to be done. "
#~ "When starting a process, Effektif will 'execute' the actions in a process in"
#~ " the proper order. The ordering is also refered to as control flow and is "
#~ "specified with transitions, gateways and events. There are different types "
#~ "of actions: a user task will create a task in a case. A 'Send Email' action "
#~ "will send an email. A 'Google file upload' action will upload a file to a "
#~ "Google Drive folder."
#~ msgstr ""

#~ msgid ""
#~ "Trigger A trigger in a process specifies when the process is started. The "
#~ "manual trigger is the simplest. This means that the process is started when "
#~ "a user starts a new process case inside Effektif. The form trigger allows to"
#~ " specify a form that users have to complete to start a new process case. And"
#~ " the mail trigger will create a new process case automatic each time a mail "
#~ "arrives on a specific email address. There is no direct relation between "
#~ "triggers and start events."
#~ msgstr ""

#~ msgid ""
#~ "Role A role is mechanism to perform assignments of user tasks in a process. "
#~ "Roles correspond to swimlanes in a BPMN diagram. It's also known as a "
#~ "process role. Process roles are different from organizational roles. For "
#~ "example, there might be 20 peole in an organization having the role 'Support"
#~ " engineer'. Yet each support case could have 1 person acting as the 'Support"
#~ " contact' process role. So a process role only lasts for the duration of a "
#~ "case. While organizational roles are more static and relate to the job you "
#~ "perform at the organization. Read more about roles"
#~ msgstr ""

#~ msgid ""
#~ "Organization An organization represents a collection of users --typically a "
#~ "company-- together with all their data in Effektif. The data in an "
#~ "organization is not visible to people outside the organization. When you're "
#~ "logged into Effektif, you see all the data inside one particular "
#~ "organization. If you are a member of multiple organizations, you can switch "
#~ "between organizations by selecting a different organization under your name "
#~ "in the top right corner."
#~ msgstr ""
