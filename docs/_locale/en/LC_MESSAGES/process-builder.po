# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016, Signavio GmbH
# This file is distributed under the same license as the User Guide package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2016.
# 
msgid ""
msgstr ""
"Project-Id-Version: User Guide 2.22\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-04-13 14:38+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.2.0\n"

#: ../../process-builder.rst:4
msgid "Process builder"
msgstr ""

#: ../../process-builder.rst:11
msgid ""
"Use the process builder to create and configure executable processes. You "
"can think of an executable process as a kind of software, but you will find "
"it easier to build automation using processes. With Effektif, non-technical "
"people can create useful processes."
msgstr ""

#: ../../process-builder/triggers.rst:4 ../../process-builder/triggers.rst:4
msgid "Triggers"
msgstr ""

#: ../../process-builder/triggers.rst:6 ../../process-builder/triggers.rst:6
msgid ""
"A trigger in a process specifies how the process starts. Triggers do not "
"have any relation to :ref:`start events <start-event>`."
msgstr ""

#: ../../process-builder/triggers.rst:11 ../../process-builder/triggers.rst:11
msgid "Manual trigger"
msgstr ""

#: ../../process-builder/triggers.rst:13 ../../process-builder/triggers.rst:13
msgid ""
"A manual trigger gives you the simplest way to start a process. With a "
"manual trigger, you start processes manually in Effektif, by selecting "
"`Start new case` and then selecting the process to start."
msgstr ""

#: ../../process-builder/triggers.rst:21 ../../process-builder/triggers.rst:21
msgid "Form trigger"
msgstr ""

#: ../../process-builder/triggers.rst:23 ../../process-builder/triggers.rst:23
msgid ""
"With a form trigger, you use a form to start a process. After selecting the "
"form trigger, you can use the form builder to specify form fields."
msgstr ""

#: ../../process-builder/triggers.rst:28 ../../process-builder/triggers.rst:28
msgid ""
"Form trigger configuration - using the form builder to define a trigger form"
msgstr ""

#: ../../process-builder/triggers.rst:37 ../../process-builder/triggers.rst:37
msgid "Email trigger"
msgstr ""

#: ../../process-builder/triggers.rst:39 ../../process-builder/triggers.rst:39
msgid ""
"An email trigger starts a new case for each email that you send to the "
"trigger’s Effektif email address. Note this differs from reading an existing"
" email account, such as your own. After selecting the email trigger, you can"
" see its email address:"
msgstr ""

#: ../../process-builder/triggers.rst:45 ../../process-builder/triggers.rst:45
msgid "Mail trigger configuration"
msgstr ""

#: ../../process-builder/triggers.rst:47 ../../process-builder/triggers.rst:47
msgid ""
"The email trigger creates an email variable that stores the email that "
"started the process."
msgstr ""

#: ../../process-builder/triggers.rst:50 ../../process-builder/triggers.rst:50
msgid ""
"You can use an email trigger by adding the trigger email address to a "
"mailing list, such as `support@example.com `or `info@example.com`. You’ll "
"have to ask the administrator of the mailing list to add the process "
"trigger’s email address to the list. Once you have done this, the process "
"trigger address will also receive any email sent to the mailing list, "
"starting the process in Effektif. You will then see the email in the event "
"stream:"
msgstr ""

#: ../../process-builder/triggers.rst:60 ../../process-builder/triggers.rst:60
msgid "Trigger mail in stream"
msgstr ""

#: ../../process-builder/triggers.rst:66 ../../process-builder/triggers.rst:66
msgid "Salesforce trigger"
msgstr ""

#: ../../process-builder/triggers.rst:68 ../../process-builder/triggers.rst:68
msgid ""
"A Salesforce trigger starts a new case in response to Salesforce sending an "
"outbound message as part of a Salesforce workflow. Before you can use a "
"Salesforce trigger, configure :ref:`Salesforce Integration <salesforce-"
"integration>`."
msgstr ""

#: ../../process-builder/triggers.rst:72 ../../process-builder/triggers.rst:72
msgid ""
"When you have configured a Salesforce service, you can select it as a "
"process trigger, so that messages from Salesforce will now trigger new "
"cases."
msgstr ""

#: ../../process-builder/triggers.rst:78 ../../process-builder/triggers.rst:78
msgid "Example of a Salesforce trigger"
msgstr ""

#: ../../process-builder/triggers.rst:80 ../../process-builder/triggers.rst:80
msgid ""
"In the process definition, you can use the Salesforce object fields from the"
" Salesforce message just like normal :ref:`variables <variables>`."
msgstr ""

#: ../../process-builder/actions.rst:4 ../../process-builder/actions.rst:4
msgid "Actions"
msgstr ""

#: ../../process-builder/actions.rst:18 ../../process-builder/actions.rst:18
msgid "The *Process builder*’s actions palette"
msgstr ""

#: ../../process-builder/actions.rst:20 ../../process-builder/actions.rst:20
msgid ""
"The `BPMN "
"<http://en.wikipedia.org/wiki/Business_Process_Model_and_Notation>`_ diagram"
" editor shows actions and control flow elements, such as events and "
"gateways. Use the diagram editor to add sequential flows between actions, "
"decisions and other control flow behaviour."
msgstr ""

#: ../../process-builder/actions.rst:27 ../../process-builder/actions.rst:27
msgid "Adding a transition"
msgstr ""

#: ../../process-builder/actions.rst:29 ../../process-builder/actions.rst:29
msgid ""
"You can create a transition in the `Advanced flows` view. A transition "
"specifies sequential flow, which means the next action only starts when "
"someone has completed the previous one."
msgstr ""

#: ../../process-builder/actions.rst:33 ../../process-builder/actions.rst:33
msgid ""
"To add a transition, click to select the first action. Several symbols "
"appear to the right of the selected element:"
msgstr ""

#: ../../process-builder/actions.rst:38 ../../process-builder/actions.rst:38
msgid ""
"Start creating a transition by dragging the transition symbol to the "
"destination"
msgstr ""

#: ../../process-builder/actions.rst:40 ../../process-builder/actions.rst:40
msgid ""
"Click the transition symbol |transition-symbol| and drag it to the "
"destination element. When you drag the symbol over the destination element, "
"it indicates that you can drop to create the transition:"
msgstr ""

#: ../../process-builder/actions.rst:47 ../../process-builder/actions.rst:47
msgid "Creating a transition hovering over destination"
msgstr ""

#: ../../process-builder/actions.rst:49 ../../process-builder/actions.rst:49
msgid ""
"Release the mouse button over the destination to create the transition."
msgstr ""

#: ../../process-builder/actions.rst:53 ../../process-builder/actions.rst:53
msgid "Creating the next user task"
msgstr ""

#: ../../process-builder/actions.rst:55 ../../process-builder/actions.rst:55
msgid ""
"You can easily create the next User Task in a process in the same way you "
"created transitions, above. Start by selecting the previous action:"
msgstr ""

#: ../../process-builder/actions.rst:60 ../../process-builder/actions.rst:60
msgid "Start creating the next user task by dragging the action symbol"
msgstr ""

#: ../../process-builder/actions.rst:62 ../../process-builder/actions.rst:62
msgid ""
"Click the rounded rectangle symbol |task-symbol| and drag it to an empty "
"place on the canvas."
msgstr ""

#: ../../process-builder/actions.rst:68 ../../process-builder/actions.rst:68
msgid "Drag the rounded rectangle symbol to an empty place"
msgstr ""

#: ../../process-builder/actions.rst:70 ../../process-builder/actions.rst:70
msgid ""
"Drop the symbol where you want to create the next user task. Release the "
"mouse button to create new user task where you dropped it, with a transition"
" from the previous action."
msgstr ""

#: ../../process-builder/actions.rst:76 ../../process-builder/actions.rst:76
msgid "Adding the next user task and its transition at the same time"
msgstr ""

#: ../../process-builder/actions.rst:78 ../../process-builder/actions.rst:78
msgid ""
"Alternatively, just click the user task icon |task-symbol| to create a new "
"user task in the default location, with a transition."
msgstr ""

#: ../../process-builder/actions.rst:83 ../../process-builder/actions.rst:83
msgid "Control flow elements"
msgstr ""

#: ../../process-builder/actions.rst:85 ../../process-builder/actions.rst:85
msgid ""
"The diagram also includes control flow elements, such as events and "
"gateways. Unlike actions, control flow elements don’t represent something "
"that should happen. Instead, you use events and gateways to specify the flow"
" between the actions."
msgstr ""

#: ../../process-builder/details.rst:4 ../../process-builder/details.rst:4
msgid "Details"
msgstr ""

#: ../../process-builder/details.rst:6 ../../process-builder/details.rst:6
msgid ""
"In the process builder, select the *Details* tab to further configure the "
"process."
msgstr ""

#: ../../process-builder/details.rst:10 ../../process-builder/details.rst:10
msgid "Configuring process details"
msgstr ""

#: ../../process-builder/details.rst:12 ../../process-builder/details.rst:12
msgid "On the *General* tab, configure the following process properties."
msgstr ""

#: ../../process-builder/details.rst:14 ../../process-builder/details.rst:14
msgid ""
"*Process owner* - shown on the *Processes* page to indicate who has "
"responsibility for a process model, and used as the default recipient of "
"some :ref:`notifications <notifications>`."
msgstr ""

#: ../../process-builder/details.rst:15 ../../process-builder/details.rst:15
msgid ""
"*Process description* - documents a process, usually by describing the "
"process goal."
msgstr ""

#: ../../process-builder/details.rst:16 ../../process-builder/details.rst:16
msgid ""
"*Case name template* - the name for new cases of this process, usually "
"containing trigger :ref:`variables <variables>` so that each case has a "
"different name."
msgstr ""

#: ../../process-builder/details.rst:18 ../../process-builder/details.rst:18
msgid ""
"Use the *Access control* tab to restrict access to this process and its "
"cases."
msgstr ""

#: ../../process-builder/details.rst:20 ../../process-builder/details.rst:20
msgid ""
"Use the *Field overview* tab to view and rename this process’ "
":ref:`variables <variables>`."
msgstr ""

#: ../../process-builder/versions.rst:4 ../../process-builder/versions.rst:4
msgid "Versions"
msgstr ""

#: ../../process-builder/versions.rst:6 ../../process-builder/versions.rst:6
msgid ""
"When you use the process editor to edit your process model, Effektif saves "
"all of your changes immediately. You can go back and edit the process again "
"later, and it will not have changed. However, to execute a process by "
"starting a new case you need a published version."
msgstr ""

#: ../../process-builder/versions.rst:12 ../../process-builder/versions.rst:12
msgid "Publishing a process version"
msgstr ""

#: ../../process-builder/versions.rst:14 ../../process-builder/versions.rst:14
msgid ""
"The process editor’s `Versions` tab shows a list of published versions. "
"Until you publish the first version, this page shows a message that there "
"the process has ‘no published versions’."
msgstr ""

#: ../../process-builder/versions.rst:20 ../../process-builder/versions.rst:20
msgid "The process editor’s `Versions` tab with no published versions"
msgstr ""

#: ../../process-builder/versions.rst:22 ../../process-builder/versions.rst:22
msgid ""
"You can only start a new case for a process that has a published version, "
"hence the light green button displays ‘Publish to run this process’. After "
"you publish the first version, the list shows version #1 and you can start a"
" new case using that version."
msgstr ""

#: ../../process-builder/versions.rst:29 ../../process-builder/versions.rst:29
msgid "The `Versions` list after publishing the first version"
msgstr ""

#: ../../process-builder/versions.rst:31 ../../process-builder/versions.rst:31
msgid ""
"Version #1 always has the description `Initial version`. For later versions,"
" you can add your own description."
msgstr ""

#: ../../process-builder/versions.rst:35 ../../process-builder/versions.rst:35
msgid "Adding version comments"
msgstr ""

#: ../../process-builder/versions.rst:37 ../../process-builder/versions.rst:37
msgid ""
"After the first published version, you can add a comment to describe the "
"changes when you publish a new version of a process."
msgstr ""

#: ../../process-builder/versions.rst:42 ../../process-builder/versions.rst:42
msgid ""
"The `Publish changes` prompt, where you can add an optional version comment"
msgstr ""

#: ../../process-builder/versions.rst:44 ../../process-builder/versions.rst:44
msgid ""
"You can omit the version comment, but it helps collaboration between team "
"members by making process modelling more transparent."
msgstr ""

#: ../../process-builder/versions.rst:50 ../../process-builder/versions.rst:50
msgid "Published versions with descriptive version comments"
msgstr ""

#: ../../process-builder/versions.rst:52 ../../process-builder/versions.rst:52
msgid ""
"In this example, each version has a short comment that describes the "
"changes."
msgstr ""

#: ../../process-builder/versions.rst:55 ../../process-builder/versions.rst:55
msgid "Writing good version comments"
msgstr ""

#: ../../process-builder/versions.rst:57 ../../process-builder/versions.rst:57
msgid ""
"When you write version comments, use the following tips to make them more "
"consistent and useful."
msgstr ""

#: ../../process-builder/versions.rst:60 ../../process-builder/versions.rst:60
msgid ""
"Make the comment an imperative phrase that starts with a word like ‘Add’ or "
"‘Fix’."
msgstr ""

#: ../../process-builder/versions.rst:61 ../../process-builder/versions.rst:61
msgid ""
"Capitalise the first word and don’t include a full-stop at the end, for "
"consistency."
msgstr ""

#: ../../process-builder/versions.rst:63 ../../process-builder/versions.rst:63
msgid "Describe specifics, instead of vaguely referring to ‘changes’."
msgstr ""

#: ../../process-builder/versions.rst:64 ../../process-builder/versions.rst:64
msgid "Keep it short; 3-10 words usually suffice."
msgstr ""

#: ../../process-builder/versions.rst:65 ../../process-builder/versions.rst:65
msgid ""
"Consider making the comment longer to explain why you made this change."
msgstr ""

#: ../../process-builder/versions.rst:67 ../../process-builder/versions.rst:67
msgid ""
"You may find it easier to publish a series of small changes, creating a "
"number of intermediate versions instead of one big change. Fine-grained "
"versions make the version history more useful."
msgstr ""

#: ../../process-builder/variables.rst:2 ../../process-builder/variables.rst:2
msgid "Variables"
msgstr ""

#: ../../process-builder/variables.rst:4 ../../process-builder/variables.rst:4
msgid ":ref:`variables` store workflow data when the process runs."
msgstr ""

#: ../../process-builder/roles.rst:4 ../../process-builder/roles.rst:4
msgid "Roles"
msgstr ""

#: ../../process-builder/roles.rst:15 ../../process-builder/roles.rst:15
msgid ""
"A process in Effektif can define roles, in the same way that a business "
"meeting ‘process’ has roles for whoever chairs the meeting (the ‘Chair’) and"
" whoever takes minutes (the ‘Secretary’). The following meeting process "
"model assigns the tasks on the top row to the *Chair* and the tasks on the "
"bottom row to the *Secretary*."
msgstr ""

#: ../../process-builder/roles.rst:20 ../../process-builder/roles.rst:20
msgid ""
"A *Meeting* process, with tasks for *Chair* (top row) and *Secretary* "
"(bottom row) roles"
msgstr ""

#: ../../process-builder/roles.rst:22 ../../process-builder/roles.rst:22
msgid ""
"In each meeting (each :ref:`case <cases>` in Effektif), one person takes the"
" role of chair, and one the role of secretary. These assignments generally "
"don’t change during a meeting. Similarly, Effektif role assignments don’t "
"change during a case. Effektif automatically assigns each new task with a "
"role assignment to the person who already has the role."
msgstr ""

#: ../../process-builder/roles.rst:27 ../../process-builder/roles.rst:27
msgid ""
"In Effektif, a process role works like a workflow variable that you use to "
"assigning tasks. A role variable has the :ref:`type-user` and stores a "
"single user."
msgstr ""

#: ../../process-builder/roles.rst:30 ../../process-builder/roles.rst:30
msgid ""
"These process roles differ from organization roles. For example, you can "
"have the *Team lead* role in your organization, an assignment that does not "
"necessarily have an end date. A process role, such as *Meeting chair*, has a"
" different scope and only applies for the duration of a single case."
msgstr ""

#: ../../process-builder/roles.rst:34 ../../process-builder/roles.rst:34
msgid ""
"To assign a role to a user task, open the task’s configuration panel, select"
" the `Assignment` tab, and use the `Assign using a role` menu on the right-"
"hand side."
msgstr ""

#: ../../process-builder/roles.rst:38 ../../process-builder/roles.rst:38
msgid ""
"To assign a role, use the menu to create a new role or select an existing "
"role"
msgstr ""

#: ../../process-builder/roles.rst:40 ../../process-builder/roles.rst:40
msgid ""
"You can also use the edit icon next to the role name to rename the role."
msgstr ""

#: ../../process-builder/roles.rst:43 ../../process-builder/roles.rst:43
msgid "Role candidates"
msgstr ""

#: ../../process-builder/roles.rst:45 ../../process-builder/roles.rst:45
msgid ""
"You can use a role to assign multiple tasks a person from a group of "
"candidates. For example, you might have a support process that includes "
"three user tasks that you assign to a support engineer."
msgstr ""

#: ../../process-builder/roles.rst:50 ../../process-builder/roles.rst:50
msgid ""
"Assigning a task to a *Support engineer* role with candidates Alice and Ben"
msgstr ""

#: ../../process-builder/roles.rst:52 ../../process-builder/roles.rst:52
msgid ""
"Instead, assign the three tasks to a new role called ‘Support engineer’, and"
" add the relevant people as candidates for the role."
msgstr ""

#: ../../process-builder/roles.rst:55 ../../process-builder/roles.rst:55
msgid ""
"Creating the first task that has a role will notify all of the candidates "
"for the role. When one of the candidates takes the task, Effektif will "
"assign the subsequent tasks with the same role to the same person. That "
"helps this person work more efficiently because they have the context "
"knowledge about that case."
msgstr ""

#: ../../process-builder/roles.rst:59 ../../process-builder/roles.rst:59
msgid ""
"If you reassign a task that has a role assignment, Effektif will update the "
"role variable, and assign all subsequent tasks with the same role to the new"
" assignee."
msgstr ""

#: ../../process-builder/roles.rst:64 ../../process-builder/roles.rst:64
msgid "Using a form field to assign a role"
msgstr ""

#: ../../process-builder/roles.rst:66 ../../process-builder/roles.rst:66
msgid ""
"When you execute a process, you normally assign a specific person to a role "
"by using the assignee button to select someone. Sometimes, you want this "
"assignment to an explicit part of the process, to make sure the assignment "
"happens at the right time. For example, you may find it important to assign "
"the *Support engineer* before completing an *Initial investigation* task."
msgstr ""

#: ../../process-builder/roles.rst:73 ../../process-builder/roles.rst:73
msgid ""
"You can do this by adding the role assignment to a form, because you can use"
" task assignment roles as process variables, just like any other *User* form"
" field."
msgstr ""

#: ../../process-builder/roles.rst:79 ../../process-builder/roles.rst:79
msgid "Adding the *Support engineer* role assignment to a form"
msgstr ""

#: ../../process-builder/roles.rst:81 ../../process-builder/roles.rst:81
msgid ""
"To add a role assignment to a form, first define the process role, such as "
"the *Support engineer* role created above, then on the form, under the "
"*Reuse field* heading, select the role variable to add it to the form."
msgstr ""

#: ../../process-builder/roles.rst:86 ../../process-builder/roles.rst:86
msgid ""
"Alternatively, you can first define the *Support engineer* role by adding a "
"field with type *User* to the *Initial investigation* task’s form, and then "
"select the *Support engineer* role on another user task’s *General* "
"configuration."
msgstr ""

#: ../../process-builder/locking.rst:4 ../../process-builder/locking.rst:4
msgid "Process locking"
msgstr ""

#: ../../process-builder/locking.rst:6 ../../process-builder/locking.rst:6
msgid ""
"In the process builder, only one person can edit a process at a time. While "
"someone continues to edit a process, the `Processes` list shows a message."
msgstr ""

#: ../../process-builder/locking.rst:11 ../../process-builder/locking.rst:11
msgid "The `Processes` list message while someone else edits the process"
msgstr ""

#: ../../process-builder/locking.rst:13 ../../process-builder/locking.rst:13
msgid ""
"You can still open the process, but you will see a warning message "
"explaining that you cannot make changes:"
msgstr ""

#: ../../process-builder/locking.rst:18 ../../process-builder/locking.rst:18
msgid ""
"Warning that you cannot edit a process at the same time as someone else"
msgstr ""

#: ../../process-builder/locking.rst:20 ../../process-builder/locking.rst:20
msgid ""
"You can edit the process and make changes after the other person leaves the "
"process editor, by opening the `Tasks` list, for example."
msgstr ""

#: ../../process-builder/bpmn-import.rst:4
#: ../../process-builder/bpmn-import.rst:4
msgid "BPMN import"
msgstr ""

#: ../../process-builder/bpmn-import.rst:6
#: ../../process-builder/bpmn-import.rst:6
msgid ""
"You can import an Effektif process model from a BPMN 2.0 XML file. You can "
"use this to import a model that you created in another tool, or to load a "
"file that you saved using the :ref:`BPMN export <bpmn-export>` option."
msgstr ""

#: ../../process-builder/bpmn-import.rst:10
#: ../../process-builder/bpmn-import.rst:10
msgid ""
"To import a process model, on the `Processes` page, click the `Import BPMN` "
"button and select the BPMN XML file."
msgstr ""

#: ../../process-builder/bpmn-import.rst:15
#: ../../process-builder/bpmn-import.rst:15
msgid "The `Import BPMN` button on the `Processes` page"
msgstr ""

#: ../../process-builder/bpmn-import.rst:17
#: ../../process-builder/bpmn-import.rst:17
msgid ""
"Effektif does not support all BPMN 2.0 elements, so the process may appear "
"differently in Effektif. In particular:"
msgstr ""

#: ../../process-builder/bpmn-import.rst:21
#: ../../process-builder/bpmn-import.rst:21
msgid "BPMN swim lanes become :ref:`roles <roles>` in Effektif"
msgstr ""

#: ../../process-builder/bpmn-import.rst:22
#: ../../process-builder/bpmn-import.rst:22
msgid "tasks become :ref:`user tasks <user-task>` in Effektif"
msgstr ""

#: ../../process-builder/bpmn-import.rst:23
#: ../../process-builder/bpmn-import.rst:23
msgid "Effektif removes unsupported elements, such as timer events."
msgstr ""

#: ../../process-builder/bpmn-export.rst:4
#: ../../process-builder/bpmn-export.rst:4
msgid "BPMN export"
msgstr ""

#: ../../process-builder/bpmn-export.rst:6
#: ../../process-builder/bpmn-export.rst:6
msgid ""
"You can export an Effektif process model as a BPMN 2.0 XML file. You may "
"find this useful for opening the model in another tool that supports BPMN, "
"or to make a backup that you can load using the :ref:`BPMN import <bpmn-"
"import>` option."
msgstr ""

#: ../../process-builder/bpmn-export.rst:10
#: ../../process-builder/bpmn-export.rst:10
msgid ""
"To export a process model, first open it in the Effektif process editor. "
"Select the menu next to the `Publish changes` button, then select `Export "
"BPMN 2.0 XML`."
msgstr ""

#: ../../process-builder/bpmn-export.rst:16
#: ../../process-builder/bpmn-export.rst:16
msgid ""
"Using the `Export BPMN 2.0 XML` option to save a process model in a file"
msgstr ""

#: ../../process-builder/bpmn-export.rst:18
#: ../../process-builder/bpmn-export.rst:18
msgid ""
"This results in a file download that describes your process model in BPMN "
"format. Effektif only exports one kind of BPMN file, so it doesn’t give you "
"any options to configure."
msgstr ""

#: ../../process-builder/copy-delete.rst:4
#: ../../process-builder/copy-delete.rst:4
msgid "Copying & deleting processes"
msgstr ""

#: ../../process-builder/copy-delete.rst:6
#: ../../process-builder/copy-delete.rst:6
msgid ""
"You can create a copy of a process or delete it using the process menu shown"
" in the previous section."
msgstr ""

#: ../../process-builder/copy-delete.rst:8
#: ../../process-builder/copy-delete.rst:8
msgid ""
"The `Create a copy` option duplicates the process in the same organisation. "
"You may find it useful to duplicate a process if you want to experiment with"
" changes without publishing changes to a live process. You may also want to "
"duplicate a process to model a special case of the process, instead of "
"adding a conditional flow to the standard process."
msgstr ""

#: ../../process-builder/copy-delete.rst:12
#: ../../process-builder/copy-delete.rst:12
msgid ""
"The `Delete process` option permanently deletes a process and all of its "
"cases. You cannot undo this operation, so you must enter a confirmation. You"
" might want to delete a process that you created by duplicating another "
"process in order to experiment with changes in the model."
msgstr ""

#: ../../process-builder/copy-delete.rst:16
#: ../../process-builder/copy-delete.rst:16
msgid ""
"In Effektif, you cannot currently delete cases, which you might want to do "
"if you have created test cases while developing the process. However, you "
"can use `Create a copy` and `Delete process` to duplicate a process and then"
" delete the original. This deletes all of the cases with the original "
"process, and leaves a copy with no cases."
msgstr ""

#: ../../process-builder.rst:6
msgid ""
"A process defines a template for automating repetitive work, like a recipe "
"that describes the actions that you perform to achieve a goal. For example, "
"consider a :ref:`Hire employee <hire-employee>` process. Each time an "
"organization hires someone, the recruitment team has to complete a number of"
" tasks, including ‘Evaluate CV’, ‘Plan interview’ and ‘Interview candidate’."
" Each time someone starts the process, Effektif creates a new case."
msgstr ""

#: ../../process-builder/actions.rst:6 ../../process-builder/actions.rst:6
msgid ""
"Actions represent the steps in a process - things to do. Action include "
"things like user tasks in Effektif, operations on a file in a document "
"management system or any other actions that represent work that someone will"
" perform as part of a process. When starting a process, Effektif will "
"‘execute’ the actions in a process in the proper order. The process "
":ref:`control flow <control-flow>` determines this ordering, using "
"transitions, gateways and events."
msgstr ""

#: ../../process-builder/actions.rst:11 ../../process-builder/actions.rst:11
msgid ""
"A process can include different :ref:`action-types`. A user task will create"
" a task in a case. A ‘Send Email’ action will send an email. A ‘Google file "
"upload’ action will upload a file to a Google Drive folder."
msgstr ""

#: ../../process-builder/roles.rst:10 ../../process-builder/roles.rst:10
msgid ""
"Process roles differ from organizational roles. A process role only lasts "
"for the duration of a case, while organizational roles last longer and "
"relate to the job you perform at the organization. For example, when you "
"have a meeting, one person sometimes takes the role of chairperson. That "
"person doesn’t have the job title *Meeting chair* - they’ve just adopted "
"that role for the duration of the meeting."
msgstr ""

#: ../../process-builder/roles.rst:6 ../../process-builder/roles.rst:6
msgid ""
"Creating a role gives a process-specific name to whoever performs one or "
"more process tasks. You can optionally configure a role with a list of "
"candidates. Roles have the same function as swimlanes in BPMN."
msgstr ""

#~ msgid ""
#~ "Creating a role gives a process-specific name to whoever performs one or "
#~ "more process tasks. You can optionally configure a role with a list of "
#~ "canidates. Roles have the same function as swimlanes in BPMN."
#~ msgstr ""

#~ msgid ""
#~ "You can think of actions like steps in a process. Action include things like"
#~ " user tasks in Effektif, operations on a file in a document management "
#~ "system or any other actions that represent work that someone will perform as"
#~ " part of a process."
#~ msgstr ""

#~ msgid ""
#~ "For example, when you have a meeting, one person sometimes takes the role of"
#~ " chairperson. That person doesn’t have the job title *Meeting chair* - "
#~ "they’ve just adopted that role for the duration of the meeting."
#~ msgstr ""

#~ msgid ""
#~ msgstr ""

#~ msgid "Be concise; 3-10 words is usually about right."
#~ msgstr ""

#~ msgid "unsupported elements, such as timer events, are removed."
#~ msgstr ""

#~ msgid "Form documents"
#~ msgstr ""
