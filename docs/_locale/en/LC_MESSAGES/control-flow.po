# 
msgid ""
msgstr ""
"Project-Id-Version: User Guide 2.22\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-04-17 10:39+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

msgid "Control flow"
msgstr ""

msgid ""
"You use transitions, gateways and events to specify the processing order of "
"the actions in a process."
msgstr ""

msgid "Transition"
msgstr ""

msgid "Exclusive gateway"
msgstr ""

msgid ""
"An exclusive gateway must have at least one incoming and two outgoing "
"transitions"
msgstr ""

msgid ""
"You can easily change the text on the buttons. For example, change them to "
"`Approve` and `Reject`:"
msgstr ""

msgid "Customized decision buttons"
msgstr ""

msgid ""
"After starting a new case for this process, the `Review contract` task will "
"have decision buttons:"
msgstr ""

msgid "Task decision buttons"
msgstr ""

msgid "Automatic decision"
msgstr ""

msgid "Automatic decision condition editor"
msgstr ""

msgid ""
"To specify a condition, start by selecting a field and a comparison "
"operator. Enter either a static value in the input field on the right, or "
"click the |binding-symbol| button to select another field."
msgstr ""

msgid "Default transition"
msgstr ""

msgid "The default transition"
msgstr ""

msgid ""
"To make a transition the default, select the ‘per default’ item in the "
"selection field at the top."
msgstr ""

msgid "Parallel Gateway"
msgstr ""

msgid "Forking"
msgstr ""

msgid "A parallel gateway example"
msgstr ""

msgid "Joining"
msgstr ""

msgid ""
"To continue the previous example, extend the purchase order process to look:"
msgstr ""

msgid "A parallel gateway example with join"
msgstr ""

msgid "Default forking"
msgstr ""

msgid "You can combine default forking with a parallel gateway for joining."
msgstr ""

msgid "Default merging"
msgstr ""

msgid "Parallel gateway issues"
msgstr ""

msgid ""
"You will end up with problems if you loop back over parallel gateways. To "
"avoid situations:"
msgstr ""

msgid "Undesirable loopback"
msgstr ""

msgid "and this:"
msgstr ""

msgid ""
"To avoid these issues, think of all actions between forking and joining as a"
" self-contained part of the process, such that no transitions should cross "
"that scope."
msgstr ""

msgid "Start event"
msgstr ""

msgid "End event"
msgstr ""

msgid "No end event"
msgstr ""

msgid "An exclusive gateway in the process editor"
msgstr ""

msgid "A parallel gateway in the process editor"
msgstr ""

msgid "A start event in the process editor"
msgstr ""

msgid "An end event in the process editor"
msgstr ""

msgid "Manual decision"
msgstr ""

msgid "Default manual decision configuration"
msgstr ""

msgid "Manual decision variable"
msgstr ""

msgid ""
"Adding a manual decision to a process also creates a :ref:`workflow variable"
" <variables>`. You can use this to re-use the result of a decision later in "
"the process, either to display the entered value on another form, or to use "
"the value in an automatic decision’s condition."
msgstr ""

msgid "Decision variable values - ‘Approve’ or ‘Reject’"
msgstr ""

msgid ""
"Use an exclusive gateway to make a choice between multiple execution paths. "
"The exclusive gateway selects one of the outgoing transitions, and only "
"continues execution on that transition. You can configure an exclusive "
"gateway with a *manual decision* or an *automatic decision*."
msgstr ""

msgid ""
"Use a manual decision for an exclusive gateway when a person must make a "
"decision. A user task must precede the gateway; this task includes making "
"the decision. The user interface presents the decision to the user as "
"buttons on the user task form."
msgstr ""

msgid ""
"Suppose you have a user task called ‘Review contract’, an exclusive gateway "
"and the two user tasks ‘Print contract’ and ‘Update contract’:"
msgstr ""

msgid ""
"Select the exclusive gateway. Its type defaults to *manual decision*. After "
"creating the elements and connecting them, as above, you have configured the"
" exclusive gateway:"
msgstr ""

msgid ""
"When the task before the exclusive gateway - `Review contract` in this "
"example - has a form, the form includes the decision buttons."
msgstr ""

msgid ""
"During workflow execution, selecting a decision sets the variable’s value to"
" the selected decision - the text on the decision button. In this example, "
"the decision variable has the value ‘Approve’ or ‘Reject’."
msgstr ""

msgid ""
"The variable has the name ‘Decision’, by default, or the name of the gateway"
" if it has one. You can change the variable name on the process editor’s "
"`Details` tab, in the `Field overview`."
msgstr ""

msgid ""
"An exclusive gateway that selects an outgoing transition based on conditions"
" that you choose models an automatic decision. For each transition, you can "
"formulate a condition using workflow data. The workflow engine evaluates "
"transition conditions in order, from top to bottom. The workflow engine will"
" take the transition with the first condition that evaluates to true, using "
"the current case’s field values."
msgstr ""

msgid ""
"A condition can include multiple field value comparisons. To add more sub-"
"conditions, click the button at the bottom of the list. You can also use the"
" select field at the top to specify that either **all** conditions in the "
"list must evaluate to true, or that at least one of them must evaluate to "
"true."
msgstr ""

msgid ""
"If you do not completely specify a sub-condition, evaluating the whole "
"condition will fail and the workflow engine will not follow the transition. "
"The |warning-symbol| symbol indicates an incomplete sub-condition, while the"
" |check-symbol| symbol indicates a valid sub-condition. Click either of "
"these symbols to remove the sub-condition from the list."
msgstr ""

msgid ""
"An automatic decision usually has a default transition. You use a default "
"transition as a fallback mechanism: if none of the conditions evaluate to "
"true, the workflow engine follows the default transition."
msgstr ""

msgid ""
"Use parallel gateways to model tasks that people will complete at the same "
"time as each other, or one at a time but not in a particular order. To do "
"this, you *fork* and *join* the sequence flow."
msgstr ""

msgid ""
"With a parallel gateway, you can fork execution into multiple, concurrent "
"flows. When process execution arrives in a parallel gateway, the workflow "
"engine creates a new individual execution flow for each of the gateway’s "
"outgoing transitions. Let’s look at the following purchase order example:"
msgstr ""

msgid ""
"In this example, completing the `Enter purchase order` user task activates "
"the parallel gateway. The parallel gateway will create two individual paths "
"of execution. One will take the transition to `Receive payment` and create "
"that user task. Meanwhile, the other will create the `Send goods` user task."
msgstr ""

msgid ""
"You can have as many outgoing transitions as you want. The workflow engine "
"will create all destination tasks for those transitions at once."
msgstr ""

msgid ""
"You also use a parallel gateway to join concurrent paths back together. In "
"this case, the joining parallel gateway has more then one incoming "
"transition. Workflow execution will wait at the gateway until as many "
"execution flows arrive as it has incoming transitions. When the last "
"concurrent flow arrives, the joining parallel gateway will activate and the "
"workflow engine will create one execution flow on the outgoing transition."
msgstr ""

msgid ""
"In this example, `Archive purchase order` will only start after people "
"complete both the `Receive payment` and `Send goods` tasks."
msgstr ""

msgid ""
"By default, the workflow engine interprets multiple outgoing transitions "
"from an action as parallel tasks. This means that if you have multiple "
"transitions from a user task, the workflow engine will create  concurrent "
"tasks for all of the transitions’ destination actions. Let’s look at a "
"simple example."
msgstr ""

msgid ""
"After `Send goods` completes, the workflow engine will create the tasks "
"`Receive payment` and `Send goods` immediately."
msgstr ""

msgid ""
"When multiple transitions lead to a user task, the workflow engine will "
"start the user task once for each execution flow that arrives. This means "
"that the workflow engine does not perform implicit joining for parallel "
"flows."
msgstr ""

msgid ""
"The :ref:`process-builder` displays a transition an arrow from a source "
"element to a destination element. The transition specifies that the workflow"
" engine only ‘executes’ the destination element after completing the source "
"element. BPMN calls a transition a ‘sequence flow’."
msgstr ""

msgid ""
"A start event marks the start of a process. All process elements that do not"
" have incoming transitions act as start elements. Start events don’t have a "
"direct connection to triggers. You can usually leave out start events if you"
" want to create more consice diagrams."
msgstr ""

msgid ""
"Like start events, you can also omit end events. End events mark the end of "
"an execution flow:"
msgstr ""

msgid "Equivalently:"
msgstr ""

msgid "Intermediate timer event"
msgstr ""

msgid "An intermediate timer event in the process editor"
msgstr ""

msgid "Using an intermediate timer event to model an evaluation period"
msgstr ""

msgid ""
"Configure how long the timer waits by selecting the timer in the process "
"editor."
msgstr ""

msgid ""
"In order to use the decision you need to name the buttons which will "
"represent the deicion. For each button, the label on the right indicates the"
" next action in the process, which Signavio Workflow will perform when "
"someone clicks the button. In this example, when the user clicks the "
"decision button `Print contract`, Signavio Workflow executes the `Print "
"contract` task, but *not* the `Update contract` task."
msgstr ""

msgid ""
"An intermediate timer event indicates that process execution waits for a "
"timer. You can use this to prevent Signavio Workflow creating the next task "
"in a process until it becomes relevant."
msgstr ""

#~ msgid ""
#~ "In order to use the decision you need to name the buttons which will "
#~ "represent the deicion. For each button, the label on the right indicates the"
#~ " next action in the process, which Effektif will perform when someone clicks"
#~ " the button. In this example, when the user clicks the decision button "
#~ "`Print contract`, Effektif executes the `Print contract` task, but *not* the"
#~ " `Update contract` task."
#~ msgstr ""

#~ msgid ""
#~ "An intermediate timer event indicates that process execution waits for a "
#~ "timer. You can use this to prevent Effektif creating the next task in a "
#~ "process until it becomes relevant."
#~ msgstr ""

#~ msgid ""
#~ "A start event marks the start of a process. All process elements that do not"
#~ " have incoming transitions are considered start elements. Start events don’t"
#~ " have a direct connection to triggers. You can usually leave out start "
#~ "events if you want to create more consice diagrams."
#~ msgstr ""

#~ msgid ""
#~ "Like start events, end events are also optional. End events mark the end of "
#~ "an execution flow:"
#~ msgstr ""

#~ msgid "This is equivalent to:"
#~ msgstr ""

#~ msgid ""
#~ "The :ref:`process-builder` displays a transition an arrow from a source "
#~ "element to a destination element. The transition specifies that the "
#~ "destination element is only ‘executed’ after the source element is "
#~ "completed. A transition is called a ‘sequence flow’ in BPMN."
#~ msgstr ""

#~ msgid ""
#~ "Here’s an example. Suppose you have a user task called ‘Review contract’, an"
#~ " exclusive gateway and the two user tasks ‘Print contract’ and ‘Update "
#~ "contract’:"
#~ msgstr ""

#~ msgid ""
#~ "When adding form fields to the task before the exclusive gateway - `Review "
#~ "contract` in this example - the decision buttons are added to the form."
#~ msgstr ""

#~ msgid ""
#~ "An automatic decision is an exclusive gateway that selects an outgoing "
#~ "transition based on conditions that you choose. For each transition, you can"
#~ " formulate a condition using workflow data. Transition conditions are "
#~ "evaluated in order, from top to bottom. The workflow engine will take the "
#~ "transition with the first condition that is true, using the current case’s "
#~ "field values."
#~ msgstr ""

#~ msgid ""
#~ "A condition can include multiple field value comparisons. To add more sub-"
#~ "conditions, click the button at the bottom of the list. You can also use the"
#~ " select field at the top to specify that either **all** conditions in the "
#~ "list must be true, or that it is enough for at least one of them to be true."
#~ msgstr ""

#~ msgid ""
#~ "When a sub-condition is incompletely specified, evaluating the whole "
#~ "condition will fail and the transition will not be taken. The |warning-"
#~ "symbol| symbol indicates an incomplete sub-condition, while the |check-"
#~ "symbol| symbol indicates that the sub-condition is valid. Click either of "
#~ "these symbols to remove the sub condition from the list."
#~ msgstr ""

#~ msgid ""
#~ "An automatic decision usually has a default transition. A default transition"
#~ " is a fallback mechanism: if none of the conditions evaluate to true, the "
#~ "default transition is taken."
#~ msgstr ""

#~ msgid ""
#~ "Use parallel gateways to model tasks that will be completed at the same time"
#~ " as each other, or one at a time but not in a particular order. To do this, "
#~ "you *fork* and *join* the sequence flow."
#~ msgstr ""

#~ msgid ""
#~ "With a parallel gateway, you can fork execution into multiple, concurrent "
#~ "flows. When process execution arrives in a parallel gateway, a new "
#~ "individual execution flow is created for each of the gateway’s outgoing "
#~ "transitions. Let’s look at the following purchase order example:"
#~ msgstr ""

#~ msgid ""
#~ "In this example, the parallel gateway will be activated when the `Enter "
#~ "purchase order` user task is completed. The parallel gateway will create two"
#~ " individual paths of execution. One will take the transition to `Receive "
#~ "payment` and create that user task. Meanwhile, the other will create the "
#~ "`Send goods` user task."
#~ msgstr ""

#~ msgid ""
#~ "You can have as many outgoing transitions as you want. All destination tasks"
#~ " for those transitions will be started at once."
#~ msgstr ""

#~ msgid ""
#~ "You also use a parallel gateway to join concurrent paths back together. In "
#~ "this case, the joining parallel gateway has more then one incoming "
#~ "transition. Workflow execution will wait at the gateway until as many "
#~ "execution flows arrive as it has incoming transitions. When the last "
#~ "concurrent flow arrives, the joining parallel gateway will activate and one "
#~ "execution flow will be created on the outgoing transition."
#~ msgstr ""

#~ msgid ""
#~ "In this example, `Archive purchase order` will only start after both "
#~ "`Receive payment` and `Send goods` are complete."
#~ msgstr ""

#~ msgid ""
#~ "By default, multiple outgoing transitions out of an action like a user task "
#~ "will be interpreted as parallel. Meaning that if you have multiple "
#~ "transitions out of a user task, all destination actions of those transitions"
#~ " will be performed concurrently. Let’s look at a simple example."
#~ msgstr ""

#~ msgid ""
#~ "After `Send goods` completes, both tasks `Receive payment` and `Send goods` "
#~ "will be created immediate."
#~ msgstr ""

#~ msgid ""
#~ "When multiple transitions lead to a user task, the user task will be started"
#~ " for each execution flow that arrives there. This means that there is no "
#~ "implicit joining for parallel flows."
#~ msgstr ""

#~ msgid ""
#~ "Use an exclusive gateway to make a choice between multiple execution paths. "
#~ "The exclusive gateway selects one of the outgoing transitions, and only "
#~ "continues execution on that transition. There are two ways to configure an "
#~ "exclusive gateway: with a *manual decision* or an *automatic decision*."
#~ msgstr ""

#~ msgid ""
#~ "Use a manual decision for an exclusive gateway when a person must make a "
#~ "decision. The previous action must be a user task, which will include making"
#~ " the decision. The user interface presents the decision to the user as "
#~ "buttons on the user task form."
#~ msgstr ""

#~ msgid ""
#~ "Select the exclusive gateway. Manual decision is the default type. After "
#~ "creating the elements and connecting them, as above, the exclusive gateway "
#~ "will be configured:"
#~ msgstr ""

#~ msgid ""
#~ "During workflow execution, the variable’s value is set to the selected "
#~ "decision - the text on the decision button. In this example, the decision "
#~ "variable value is set to ‘Approve’ or ‘Reject’."
#~ msgstr ""

#~ msgid ""
#~ "The variable name is ‘Decision’, by default, or the name of the gateway if "
#~ "it has one. You can change the variable name on the process editor’s "
#~ "`Details` tab, in the `Field overview`."
#~ msgstr ""

#~ msgid ""
#~ "A transition is an arrow from a source element to a destination element in "
#~ "the :ref:`Process builder <process-builder>`. The transition specifies that "
#~ "the destination element is only ‘executed’ after the source element is "
#~ "completed. A transition is called a ‘sequence flow’ in BPMN."
#~ msgstr ""

#~ msgid ""
#~ "In order to use the decision you need to name the buttons which will "
#~ "represent the deicion. For each button, the label on the right indicates the"
#~ " next action in the process, which will be performed when the button is "
#~ "clicked. In this example, when the user clicks the decision button `Print "
#~ "contract`, the `Print contract` task is executed and the `Update contract` "
#~ "task will *not* be executed."
#~ msgstr ""

#~ msgid ""
#~ "A transition is an arrow from a source element to a destination element in "
#~ "the `Advanced flows` view. The transition specifies that the destination "
#~ "element is only ‘executed’ after the source element is completed. A "
#~ "transition is called a ‘sequence flow’ in BPMN."
#~ msgstr ""

#~ msgid ""
#~ "`To Print contract` and `To Update contract` are the default decision "
#~ "buttons that will appear on the user task form. For each button, the label "
#~ "on the right indicates the next action in the process, which will be "
#~ "performed when the button is clicked. In this example, when the user clicks "
#~ "the decision button `To Print contract`, the `Print contract` task is "
#~ "executed and the `Update contract` task will *not* be executed."
#~ msgstr ""

#~ msgid "An unspecified condition is marked with a |warning-symbol| symbol."
#~ msgstr ""

#~ msgid ""
#~ "After `Enter purchase order` completes, both tasks `Receive payment` and "
#~ "`Send goods` will be created."
#~ msgstr ""

#~ msgid ""
#~ "Use an exclusive gateway to make a choice between multiple execution paths. "
#~ "The exclusive gateway selects one of the outgoing transitions, and only "
#~ "continues execution on that transition. There are two ways to configure an "
#~ "exclusive gateway: with a *human decision* or an 8automatic decision*."
#~ msgstr ""

#~ msgid "Human decision"
#~ msgstr ""

#~ msgid ""
#~ "Use a human decision for an exclusive gateway when a person must make a "
#~ "decision. The previous action must be a user task, which will include making"
#~ " the decision. The user interface presents the decision to the user as "
#~ "buttons on the user task form."
#~ msgstr ""

#~ msgid ""
#~ "Select the exclusive gateway. Human decision is the default type. After "
#~ "creating the elements and connecting them, as above, the exclusive gateway "
#~ "will be configured:"
#~ msgstr ""

#~ msgid "Default human decision configuration"
#~ msgstr ""
