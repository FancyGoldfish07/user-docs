# 
msgid ""
msgstr ""
"Project-Id-Version: User Guide 2.22\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-04-17 10:39+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../terminology.rst:2
msgid "Terminology"
msgstr ""

#: ../../terminology.rst:5
msgid "Organization"
msgstr ""

#: ../../terminology.rst:7
msgid ""
"An organization represents a collection of Effektif users - typically a "
"company - together with all their data in Effektif. People outside the "
"organization cannot see an organization’s data. After you log into Effektif,"
" you see all the data inside one particular organization. If you belong to "
"multiple organizations, you can switch between organizations by selecting a "
"different organization under your name in the top right corner."
msgstr ""

#~ msgid "Task"
#~ msgstr ""

#~ msgid "Process"
#~ msgstr ""

#~ msgid "Action"
#~ msgstr ""

#~ msgid "Trigger"
#~ msgstr ""

#~ msgid "Role"
#~ msgstr ""

#~ msgid ""
#~ "Tasks represent concrete action items inside a case that you can assign to "
#~ "people. In process cases, a task may have been created by a user task "
#~ "action."
#~ msgstr ""

#~ msgid ""
#~ "A process defines a template for automating repetitive work, like a recipe "
#~ "that describes the actions that you perform to achieve a goal."
#~ msgstr ""

#~ msgid ""
#~ "For example, consider a :ref:`Hire employee <hire-employee>` process. Each "
#~ "time an organization hires someone, the recruitment team has to complete a "
#~ "number of tasks, including ‘Evaluate CV’, ‘Plan interview’ and ‘Interview "
#~ "candidate’. Each time someone starts the process, Effektif creates a new "
#~ "case."
#~ msgstr ""

#~ msgid ""
#~ "Actions represent the steps in a process - things to do. When starting a "
#~ "process, Effektif will ‘execute’ the actions in a process in the proper "
#~ "order. The process :ref:`control flow <control-flow>` determines this "
#~ "ordering, using transitions, gateways and events."
#~ msgstr ""

#~ msgid ""
#~ "A process can include different :ref:`action-types`. A user task will create"
#~ " a task in a case. A ‘Send Email’ action will send an email. A ‘Google file "
#~ "upload’ action will upload a file to a Google Drive folder."
#~ msgstr ""

#~ msgid ""
#~ "A trigger in a process specifies how the process starts. The manual trigger "
#~ "works in the simplest way, and starts the process when you start a new "
#~ "process case inside Effektif. The form trigger allows to specify a form that"
#~ " you have to complete to start a new process case. The email trigger creates"
#~ " a new process case when it receives email at its own email address. "
#~ "Triggers do not have any relation to :ref:`start events <start-event>`."
#~ msgstr ""

#~ msgid ""
#~ "Use roles to assign user tasks in a process. Roles, also known as process "
#~ "roles, correspond to swimlanes in a BPMN diagram."
#~ msgstr ""

#~ msgid ""
#~ "Process roles differ from organizational roles. For example, some people "
#~ "your organization may have the role ‘Support engineer’. However, each "
#~ "support case only has one person in the ‘Support contact’ process role. A "
#~ "process role only lasts for the duration of a case, while organizational "
#~ "roles last longer and relate to the job you perform at the organization. See"
#~ " :ref:`Roles <roles>`."
#~ msgstr ""

#~ msgid "Ad-hoc case"
#~ msgstr ""

#~ msgid ""
#~ "An *ad-hoc case* does not have a predefined process. It creates a "
#~ "collaboration space that you can use to reach a one-off goal. The case "
#~ "brings together a set of tasks, a discussion and documents, and allows "
#~ "participants to share any relevant context information for the tasks."
#~ msgstr ""

#~ msgid "Case"
#~ msgstr ""

#~ msgid ""
#~ "A *case* creates a collaboration page for a particular goal. A case has "
#~ "subtasks representing the concrete action items to reach the goal. Effektif "
#~ "supports two types of cases: cases that relate to a process and ad-hoc "
#~ "cases."
#~ msgstr ""

#~ msgid ""
#~ "Each case has an event stream that acts as an audit log and includes the "
#~ "information that case participants share during collaboration, such as "
#~ "comments, documents and links. By using case comments instead of email, "
#~ "participants ensure that discussions retain the full context for everyone "
#~ "involved. See :ref:`Cases <cases>`."
#~ msgstr ""

#~ msgid ""
#~ "Each case has an event stream that acts as an audit log and includes the "
#~ "information that is shared during collaboration, such as comments, documents"
#~ " and links. By using case comments instead of email, participants ensure "
#~ "that discussions retain the full context for everyone involved. See "
#~ ":ref:`Cases <cases>`."
#~ msgstr ""

#~ msgid ""
#~ "An *ad-hoc case* is a case without a predefined process. It’s a "
#~ "collaboration space to reach any one-off goal. The case brings together a "
#~ "set of tasks, a discussion and documents, and allows participants to share "
#~ "any relevant context information for the tasks."
#~ msgstr ""

#~ msgid ""
#~ "Tasks are concrete action items inside a case that can be assigned to "
#~ "people. In process cases, a task may have been created by a user task "
#~ "action."
#~ msgstr ""

#~ msgid ""
#~ "A process is a template to automate repetitive work, like a recipe that "
#~ "describes the actions that have to be performed to achieve a goal."
#~ msgstr ""

#~ msgid ""
#~ "For example, consider a `Hire employee` process. Each time someone is hired,"
#~ " three tasks have to be completed: ‘Conduct interview’, ‘Prepare contract’ "
#~ "and ‘Create email account’. Each time the process is started, a new case is "
#~ "created."
#~ msgstr ""

#~ msgid ""
#~ "Actions are the steps in a process that represent things to be done. When "
#~ "starting a process, Effektif will ‘execute’ the actions in a process in the "
#~ "proper order. This ordering is also refered to as :ref:`control flow "
#~ "<control-flow>` and is specified with transitions, gateways and events."
#~ msgstr ""

#~ msgid ""
#~ "There are different types of actions: a user task will create a task in a "
#~ "case. A ‘Send Email’ action will send an email. A ‘Google file upload’ "
#~ "action will upload a file to a Google Drive folder."
#~ msgstr ""

#~ msgid ""
#~ "A trigger in a process specifies when the process is started. The manual "
#~ "trigger is the simplest, and starts the process when you start a new process"
#~ " case inside Effektif. The form trigger allows to specify a form that you "
#~ "have to complete to start a new process case. The email trigger creates a "
#~ "new process case when it receives email at its own email address. There is "
#~ "no direct relation between triggers and start events."
#~ msgstr ""

#~ msgid ""
#~ "A role is a mechanism used to assign user tasks in a process. Roles "
#~ "correspond to swimlanes in a BPMN diagram, and are also known as a process "
#~ "roles."
#~ msgstr ""

#~ msgid ""
#~ "Process roles are different from organizational roles. For example, there "
#~ "might be people your organization with the role ‘Support engineer’. However,"
#~ " each support case only has one person in the ‘Support contact’ process "
#~ "role. A process role only lasts for the duration of a case, while "
#~ "organizational roles are more static and relate to the job you perform at "
#~ "the organization. See :ref:`Roles <roles>`."
#~ msgstr ""

#~ msgid ""
#~ "An organization represents a collection of Effektif users - typically a "
#~ "company - together with all their data in Effektif. The data in an "
#~ "organization is not visible to people outside the organization. When you’re "
#~ "logged into Effektif, you see all the data inside one particular "
#~ "organization. If you’re a member of multiple organizations, you can switch "
#~ "between organizations by selecting a different organization under your name "
#~ "in the top right corner."
#~ msgstr ""

#~ msgid ""
#~ "A *case* is a collaboration page for a particular goal. A case has subtasks "
#~ "representing the concrete action items to reach the goal. There are two "
#~ "types of cases: cases which are related to a process and ad-hoc cases."
#~ msgstr ""

#~ msgid ""
#~ "A *case* is a collaboration page for a particular goal. A case has subtasks "
#~ "representing the concrete action items to reach the goal. There are two "
#~ "types of cases: process cases and ad-hoc cases."
#~ msgstr ""

#~ msgid "Process case"
#~ msgstr ""

#~ msgid ""
#~ "A *process case* is a case that is associated with a defined process. The "
#~ "process describes what actions have to be done and in which order. In BPM "
#~ "terminology, a process case is also known as a *process instance*."
#~ msgstr ""
